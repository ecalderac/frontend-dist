{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/buscar-productos/buscar-productos.component.html","./src/app/components/buscar-reportes/buscar-reportes.component.html","./src/app/components/buscar-ventas/buscar-ventas.component.html","./src/app/components/buscar/buscar.component.html","./src/app/components/crear-inversion/crear-inversion.component.html","./src/app/components/crear-producto/crear-producto.component.html","./src/app/components/crear-venta/crear-venta.component.html","./src/app/components/datos-venta/datos-venta.component.html","./src/app/components/editar-usuario/editar-usuario.component.html","./src/app/components/editar-venta/editar-venta.component.html","./src/app/components/inicio/inicio.component.html","./src/app/components/inversion/inversion.component.html","./src/app/components/lista-productos/lista-productos.component.html","./src/app/components/lista-ventas/lista-ventas.component.html","./src/app/components/loading/loading.component.html","./src/app/components/reportes/reportes.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/buscar-productos/buscar-productos.component.css","./src/app/components/buscar-productos/buscar-productos.component.ts","./src/app/components/buscar-reportes/buscar-reportes.component.css","./src/app/components/buscar-reportes/buscar-reportes.component.ts","./src/app/components/buscar-ventas/buscar-ventas.component.css","./src/app/components/buscar-ventas/buscar-ventas.component.ts","./src/app/components/buscar/buscar.component.css","./src/app/components/buscar/buscar.component.ts","./src/app/components/crear-inversion/crear-inversion.component.css","./src/app/components/crear-inversion/crear-inversion.component.ts","./src/app/components/crear-producto/crear-producto.component.css","./src/app/components/crear-producto/crear-producto.component.ts","./src/app/components/crear-venta/crear-venta.component.css","./src/app/components/crear-venta/crear-venta.component.ts","./src/app/components/datos-venta/datos-venta.component.css","./src/app/components/datos-venta/datos-venta.component.ts","./src/app/components/editar-inversion/editar-inversion.component.css","./src/app/components/editar-inversion/editar-inversion.component.ts","./src/app/components/editar-producto/editar-producto.component.css","./src/app/components/editar-producto/editar-producto.component.ts","./src/app/components/editar-usuario/editar-usuario.component.css","./src/app/components/editar-usuario/editar-usuario.component.ts","./src/app/components/editar-venta/editar-venta.component.css","./src/app/components/editar-venta/editar-venta.component.ts","./src/app/components/inicio/inicio.component.css","./src/app/components/inicio/inicio.component.ts","./src/app/components/inversion/inversion.component.css","./src/app/components/inversion/inversion.component.ts","./src/app/components/lista-productos/lista-productos.component.css","./src/app/components/lista-productos/lista-productos.component.ts","./src/app/components/lista-ventas/lista-ventas.component.css","./src/app/components/lista-ventas/lista-ventas.component.ts","./src/app/components/loading/loading.component.css","./src/app/components/loading/loading.component.ts","./src/app/components/reportes/reportes.component.css","./src/app/components/reportes/reportes.component.ts","./src/app/models/inversion.ts","./src/app/models/producto.ts","./src/app/models/usuario.ts","./src/app/models/venta.ts","./src/app/services/global.ts","./src/app/services/inversion.service.ts","./src/app/services/producto.service.ts","./src/app/services/upload.service.ts","./src/app/services/usuario.service.ts","./src/app/services/venta.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,ugIAAugI,cAAc,0qFAA0qF,eAAe,qyI;;;;;;;;;;;ACA9sN,oKAAoK,QAAQ,wiBAAwiB,oBAAoB,KAAK,+QAA+Q,oBAAoB,mSAAmS,2BAA2B,gSAAgS,0BAA0B,sRAAsR,mBAAmB,2VAA2V,kDAAkD,uBAAuB,cAAc,4LAA4L,cAAc,mOAAmO,2BAA2B,8H;;;;;;;;;;;ACA3yF,oKAAoK,QAAQ,wB;;;;;;;;;;;ACA5K,oKAAoK,QAAQ,8jBAA8jB,mCAAmC,oVAAoV,0BAA0B,uUAAuU,oBAAoB,icAAic,aAAa,2EAA2E,gTAAgT,2BAA2B,4K;;;;;;;;;;;ACA1zE,oKAAoK,QAAQ,iGAAiG,kBAAkB,qBAAqB,0tF;;;;;;;;;;;ACApT,iKAAiK,QAAQ,6OAA6O,wFAAwF,cAAc,wqCAAwqC,eAAe,gdAAgd,qDAAqD,2EAA2E,mGAAmG,0K;;;;;;;;;;;ACAt2E,2KAA2K,QAAQ,0TAA0T,cAAc,g1EAAg1E,+CAA+C,goC;;;;;;;;;;;ACA13F,+LAA+L,QAAQ,2QAA2Q,s1BAAs1B,kDAAkD,uBAAuB,cAAc,4OAA4O,cAAc,6aAA6a,oBAAoB,6WAA6W,0BAA0B,sWAAsW,mBAAmB,8mBAA8mB,mBAAmB,m3BAAm3B,mBAAmB,aAAa,irBAAirB,2BAA2B,25B;;;;;;;;;;;ACA1hK,iJAAiJ,sOAAsO,wBAAwB,2tCAA2tC,0BAA0B,iBAAiB,4WAA4W,qFAAqF,qFAAqF,4FAA4F,8JAA8J,kDAAkD,iBAAiB,wCAAwC,wBAAwB,uCAAuC,iBAAiB,uCAAuC,uBAAuB,2LAA2L,YAAY,mFAAmF,0WAA0W,qBAAqB,cAAc,2NAA2N,uGAAuG,cAAc,yIAAyI,aAAa,wNAAwN,6M;;;;;;;;;;;ACAngI,gLAAgL,QAAQ,4PAA4P,4FAA4F,cAAc,ulEAAulE,qDAAqD,4EAA4E,oGAAoG,0L;;;;;;;;;;;ACA11F,0KAA0K,QAAQ,+EAA+E,sVAAsV,wBAAwB,+oDAA+oD,2MAA2M,wQAAwQ,6NAA6N,oEAAoE,KAAK,uPAAuP,wQAAwQ,2RAA2R,UAAU,uPAAuP,wQAAwQ,qRAAqR,QAAQ,44BAA44B,aAAa,gM;;;;;;;;;;;ACAh9K,8JAA8J,QAAQ,gPAAgP,iBAAiB,GAAG,mBAAmB,uiG;;;;;;;;;;;ACA7b,uKAAuK,QAAQ,ujCAAujC,mCAAmC,oRAAoR,uBAAuB,wUAAwU,cAAc,wIAAwI,yBAAyB,8bAA8b,aAAa,2EAA2E,kMAAkM,2EAA2E,mSAAmS,gBAAgB,aAAa,yOAAyO,sTAAsT,2BAA2B,8H;;;;;;;;;;;ACAxsH,2KAA2K,QAAQ,ukCAAukC,oBAAoB,mSAAmS,2BAA2B,gSAAgS,0BAA0B,sRAAsR,mBAAmB,2VAA2V,kDAAkD,uBAAuB,cAAc,4LAA4L,cAAc,wdAAwd,aAAa,2EAA2E,kMAAkM,2EAA2E,mSAAmS,gBAAgB,aAAa,gPAAgP,8TAA8T,2BAA2B,8H;;;;;;;;;;;ACAj/I,0KAA0K,QAAQ,qkCAAqkC,mCAAmC,oVAAoV,0BAA0B,uUAAuU,oBAAoB,oeAAoe,aAAa,2EAA2E,4MAA4M,YAAY,2EAA2E,0RAA0R,gBAAgB,aAAa,mOAAmO,qXAAqX,2BAA2B,4K;;;;;;;;;;;ACA5uH,kKAAkK,4B;;;;;;;;;;;ACAlK,yKAAyK,QAAQ,uFAAuF,qBAAqB,89BAA89B,sCAAsC,oBAAoB,6KAA6K,oCAAoC,aAAa,wHAAwH,2CAA2C,cAAc,sHAAsH,yCAAyC,kBAAkB,sHAAsH,iDAAiD,iBAAiB,0HAA0H,2BAA2B,WAAW,kQ;;;;;;;;;;;ACA7sE,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AACd;AAE2B;AAEpB;AAQlD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAevB,YACU,YAAwB,EACxB,kBAAsC;QADtC,iBAAY,GAAZ,YAAY,CAAY;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAhBzC,WAAM,GAAG,iCAAiC,CAAC;QAQlD,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACrF,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAC7B,kEAAW,EAAE,CACd,CAAC;QAMA,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAE1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,8CAA8C;QAC9C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC;gBAClB,KAAK,CAAC,+CAA+C,CAAC,CAAC;aAC1D;iBAAI;gBACH,mEAAmE;gBACjE,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAE7D,yDAAyD;gBACzD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;oBACT,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEnB,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAC;wBACtB,KAAK,CAAC,0CAA0C,CAAC,CAAC;qBACrD;yBAAI;wBACH,+DAA+D;wBAC/D,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;wBACrC,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;qBAC/C;gBACH,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;oBAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;wBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;wBACxC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpB;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,+BAA+B;IACjC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACzD,QAAQ,CAAC,EAAE;YACT,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE7B,IAAG,CAAC,IAAI,CAAC,GAAG,EAAC;gBACX,IAAI,CAAC,aAAa,GAAG,sBAAsB,CAAC;aAC7C;iBAAI;gBACH,IAAI,CAAC,aAAa,GAAG,sEAAsE,GAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;gBACtH,IAAI,CAAC,gBAAgB,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;aACxD;QAEH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CAEF;;YAtGwB,qEAAW;YACJ,sEAAkB;;AAjBrC,YAAY;IANxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;QAEnC,SAAS,EAAE,CAAC,qEAAW,CAAC;;KACzB,CAAC;GACW,YAAY,CAsHxB;AAtHwB;AAwHlB,MAAM,4BAA4B;IAAzC;QACE,SAAI,GAAG,IAAI,CAAC;IACd,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxIyD;AACN;AACc;AACV;AACK;AAEd;AACgC;AAC7B;AACG;AACrD,0EAAkB,CAAC,iEAAQ,CAAC,CAAC;AAE7B,kBAAkB;AACyC;AACK;AACE;AACX;AACM;AACF;AACJ;AACJ;AACU;AACN;AACM;AACI;AACR;AACA;AACE;AACJ;AAEvD,sBAAsB;AACiD;AACA;AAEvE,wBAAwB;AACsE;AAE9F,0BAA0B;AACuE;AACH;AACG;AAEjG,uBAAuB;AACiE;AACH;AACA;AACG;AAEY;AACT;AACM;AACjB;AACH;AACH;AACuB;AACG;AAsDpG,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAlDrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,2GAAsB;YACtB,oFAAe;YACf,8GAAuB;YACvB,2GAAsB;YACtB,qGAAoB;YACpB,kGAAmB;YACnB,8GAAuB;YACvB,kGAAmB;YACnB,qGAAoB;YACpB,oFAAe;YACf,iHAAwB;YACxB,wGAAqB;YACrB,8GAAuB;YACvB,6FAAkB;YAClB,0FAAiB;YACjB,uFAAgB;YAChB,8GAAuB;YACvB,iHAAwB;SACzB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,oDAAO;YACP,4FAAuB;YACvB,yEAAe;YACf,8EAAiB;YACjB,gFAAkB;YAClB,qEAAa;YACb,2EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,iEAAY;YACZ,2EAAgB;YAChB,qEAAa;YACb,2EAAgB;YAChB,+EAAkB;YAClB,uEAAc;YACd,uEAAc;YACd,yEAAe;YACf,qEAAa;SACd;QAED,SAAS,EAAE,CAAC,gEAAmB,EAAE,EAAE,OAAO,EAAE,uDAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QACxE,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;AC5GtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEvD,iBAAiB;AACsD;AACA;AAC6B;AACT;AACM;AAEjG,gBAAgB;AAE8E;AAE9F,iBAAiB;AACgF;AACH;AACG;AAEjG,cAAc;AAC0E;AACH;AACG;AAExF,iBAAiB;AAC4D;AAE7E,kBAAkB;AAC8D;AACiB;AACG;AAEpG,MAAM,SAAS,GAAW;IAEtB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAe,EAAC;IACtC,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAC;IAC5C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6GAAuB,EAAC;IACvD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0GAAsB,EAAC;IAC3D,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,6GAAuB,EAAC;IACjE,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,0GAAsB,EAAC;IACtD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,qGAAoB,EAAC;IACjD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,qGAAoB,EAAC;IAC3D,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAC;IAC5C,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,gHAAwB,EAAC;IAC/D,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uGAAqB,EAAC;IACzD,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,6GAAuB,EAAC;IAC7D,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6FAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0FAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,8GAAuB,EAAC;IAC7D,EAAC,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,iHAAwB,EAAC;IACnE,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,mFAAe,EAAC;CAE3C,CAAC;AAEK,MAAM,mBAAmB,GAAU,EAAE,CAAC;AACtC,MAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAE,CAAC;;;;;;;;;;;;ACxD9F,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AACJ;AACZ;AACU;AAEZ;AACc;AACI;AAiBjE,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAenC,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,eAA+B;QAH/B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAgB;QAZlC,WAAM,GAAa,EAAE,CAAC;QAG7B,qBAAgB,GAAa,CAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAWjG,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAEF,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,mCAAmC;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE1C,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;oBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;oBACnC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;iBACjE;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;CAEF;;YAhDmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACR,yEAAc;;AAPL;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;sDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;2DAAyB;AAbtD,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6LAAgD;QAEhD,SAAS,EAAE,CAAC,qEAAW,EAAE,yEAAc,CAAC;;KACzC,CAAC;GACW,wBAAwB,CAgEpC;AAhEoC;;;;;;;;;;;;ACzBrC,+DAA+D,mL;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAGlC;QACE,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC;IACjC,CAAC;IAEF,QAAQ;IACR,CAAC;CAEF;AAVY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0LAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAUnC;AAVmC;;;;;;;;;;;;ACPpC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AAElB;AACc;AACD;AAGC;AACZ;AACU;AAiB3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAYhC,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B;QAH3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QATrC,qBAAgB,GAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;QAW3E,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAEF,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;oBAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;oBAChC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;iBAC9D;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;CAEF;;YAhDmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACV,oEAAY;;AAPD;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;mDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;wDAAyB;AAVtD,qBAAqB;IANjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,oLAA6C;QAE7C,SAAS,EAAC,CAAC,qEAAW,EAAE,oEAAY,CAAC;;KACtC,CAAC;GACW,qBAAqB,CA6DjC;AA7DiC;;;;;;;;;;;;AC3BlC,+DAA+D,2J;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B;QACE,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,CAAC;IAEF,QAAQ;IACR,CAAC;CAEF;AAVY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;GACW,eAAe,CAU3B;AAV2B;;;;;;;;;;;;ACP5B,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;ACAb;AACW;AACM;AACjB;AACT;AAQzC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IASlC,YACU,YAAwB,EACxB,iBAAmC,EACnC,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAY;QACxB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,YAAO,GAAP,OAAO,CAAQ;QALzB,YAAO,GAAY,KAAK,CAAC;QAOvB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,2DAAS,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACnF,QAAQ,CAAC,EAAE;YACP,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;gBACrB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;aAC5C;iBAAI;gBACH,IAAI,CAAC,QAAQ,EAAE,CAAC;aAEjB;QAEL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAE,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,2CAA2C,CAAC;YAChE,IAAI,CAAC,mBAAmB,GAAG,IAAI,2DAAS,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5D,wCAAwC;QAC1C,CAAC,EAAE,IAAI,CAAC,CAAC;IAEX,CAAC;CAEF;;YA/CwB,qEAAW;YACL,4EAAgB;YAC1B,sDAAM;;AAZd,uBAAuB;IANnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0LAA+C;QAE/C,SAAS,EAAE,CAAC,qEAAW,EAAE,4EAAgB,CAAC;;KAC3C,CAAC;GACW,uBAAuB,CAyDnC;AAzDmC;;;;;;;;;;;;ACZpC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAElB;AACc;AACI;AAChB;AAQjD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IASjC,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,eAA+B;QAH/B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAgB;QAEvC,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;IACxD,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACrE,QAAQ,CAAC,EAAE;YAEP,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;aAC5C;iBAAI;gBACH,IAAI,CAAC,YAAY,GAAG,wCAAwC,CAAC;gBAC7D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;aACpE;QAEL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CAEF;;YAvCmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACR,yEAAc;;AAb9B,sBAAsB;IANlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,uLAA8C;QAE9C,SAAS,EAAC,CAAC,qEAAW,EAAE,yEAAc,CAAC;;KACxC,CAAC;GACW,sBAAsB,CAiDlC;AAjDkC;;;;;;;;;;;;ACdnC,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AACJ;AACZ;AACU;AACZ;AACc;AACD;AACK;AAmBjE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IA2B9B,YACY,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B,EAC3B,eAA+B;QAJ/B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QA3BlC,UAAK,GAAU,EAAE,CAAC,CAAC,gDAAgD;QACnE,UAAK,GAAU,EAAE,CAAC,CAAC,0CAA0C;QAS7D,iBAAY,GAAU,EAAE,CAAC,CAAC,2BAA2B;QACrD,iBAAY,GAAW,EAAE,CAAC,CAAC,8CAA8C;QACzE,eAAU,GAAU,EAAE,CAAC,CAAC,gDAAgD;QAExE,iBAAY,GAAe,CAAC,CAAC,CAAC,CAAC;QAGtC,qBAAgB,GAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAC,UAAU,CAAC,CAAC;QAY/F,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE1C,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;oBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;oBACnC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;wBACxC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;qBACxB;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;iBACjE;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IASD,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa;QAExD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;QACtC,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,YAAY,GAAG,MAAM,CAAC;QAE1B,IAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAC;YACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAC,CAAC,CAAC;YAC7E,8DAA8D;YAC9D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACnC,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC3B;aACI;YACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACxC,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,aAAa,CAAC;oBAChF,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC;oBACxE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;oBACvD,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBAC1B,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC;iBACZ;aACF;YAED,IAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAC;gBACf,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;iBAAI;gBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAC,CAAC,CAAC;gBAC7E,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACnC,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;IAEH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,IAAG,IAAI,CAAC,YAAY,IAAG,IAAI,EAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,GAAC,IAAI,CAAC,gBAAgB,CAAC;SACtE;IACH,CAAC;CAEF;;YAvHqB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACV,oEAAY;YACV,yEAAc;;AARL;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;iDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;sDAAyB;AAzBxD,mBAAmB;IAP/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,8KAA2C;QAE3C,SAAS,EAAC,CAAC,qEAAW,EAAE,oEAAY,EAAE,yEAAc,CAAC;;KACtD,CAAC;GAEW,mBAAmB,CAmJ/B;AAnJ+B;;;;;;;;;;;;AC3BhC,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;ACAoB;AAClB;AAElB;AACc;AACI;AACL;AAEjB;AAQ3C,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IA0B9B,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,eAA+B,EAC/B,aAA2B;QAJ3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,kBAAa,GAAb,aAAa,CAAc;QA9BrC,aAAQ,GAAG,SAAS,CAAC;QASZ,UAAK,GAAU,EAAE,CAAC;QAGlB,aAAQ,GAAU,EAAE,CAAC;QACrB,eAAU,GAAU,EAAE,CAAC;QACvB,kBAAa,GAAU,EAAE,CAAC;QAkBjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACtJ,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACrD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9D,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,wCAAwC;IACxC,YAAY,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,oBAAoB;IACpB,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,EAAC;YAChC,IAAI,CAAC,YAAY,GAAG,gCAAgC,CAAC;YACrD,OAAO,CAAC,CAAC;SACV;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5D,QAAQ,CAAC,EAAE;YACT,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;aAC5C;iBAAI;gBACH,IAAI,CAAC,YAAY,GAAG,wCAAwC,CAAC;gBAC7D,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBAC/C,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAE,QAAQ,CAAC,EAAE;wBAC1F,MAAM,eAAe,GAAQ,QAAQ,CAAC;wBACtC,MAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBACpD,eAAe,CAAC,QAAQ,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;wBAC3E,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAG,QAAQ,CAAC,EAAE;4BACxH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;wBACvB,CAAC,CAAC;oBAEJ,CAAC,CAAC;iBACF;gBACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CAEF;;YApEmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACR,yEAAc;YAChB,oEAAY;;AA5B5B;IAAR,2DAAK,EAAE;wDAAqB;AACpB;IAAR,2DAAK,EAAE;4DAAyB;AACxB;IAAR,2DAAK,EAAE;4DAAyB;AACxB;IAAR,2DAAK,EAAE;0DAAuB;AACtB;IAAR,2DAAK,EAAE;yDAAsB;AAErB;IAAR,2DAAK,EAAE;yDAAsB;AACrB;IAAR,2DAAK,EAAE;kDAAmB;AAClB;IAAR,2DAAK,EAAE;4DAAyB;AACxB;IAAR,2DAAK,EAAE;yDAAsB;AACrB;IAAR,2DAAK,EAAE;qDAAsB;AACrB;IAAR,2DAAK,EAAE;uDAAwB;AACvB;IAAR,2DAAK,EAAE;0DAA2B;AAfxB,mBAAmB;IAN/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,8KAA2C;QAE3C,SAAS,EAAE,CAAC,qEAAW,EAAE,yEAAc,EAAE,oEAAY,CAAC;;KACvD,CAAC;GACW,mBAAmB,CA+F/B;AA/F+B;;;;;;;;;;;;AChBhC,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAElB;AACc;AACO;AACjB;AAQnD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IASnC,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,iBAAmC;QAHnC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,sBAAiB,GAAjB,iBAAiB,CAAkB;QAE3C,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,2DAAS,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACzD,QAAQ,CAAC,EAAE;gBACP,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,SAAS,CAAC;iBAC/C;YACL,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QAEN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAC5C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CACxF,QAAQ,CAAC,EAAE;gBACP,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,SAAS,CAAC;gBAE9C,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;oBACrB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC5C;qBAAI;oBACH,IAAI,CAAC,YAAY,GAAG,8CAA8C,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACvC;YAEL,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;oBAExC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IAEL,CAAC;CAEF;;YAvEmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACN,4EAAgB;;AAblC,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,yNAA8E;QAE9E,SAAS,EAAC,CAAC,qEAAW,EAAE,4EAAgB,CAAC;;KAC1C,CAAC;GACW,wBAAwB,CAiFpC;AAjFoC;;;;;;;;;;;;ACdrC,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAElB;AACc;AACI;AACH;AACb;AASjD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IASlC,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,eAA+B,EAC/B,cAA6B;QAJ7B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAe;QAErC,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAEF,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,2EAA2E;QAC3E,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;gBACP,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;iBACnC;YACL,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QAEN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAC5C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC1E,QAAQ,CAAC,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAElC,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;oBACpB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC5C;qBAAI;oBACH,IAAI,CAAC,YAAY,GAAG,6CAA6C,CAAC;oBAClE,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;wBACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBACzC;yBAAI;wBACD,6BAA6B;wBAC7B,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,GAAC,wBAAwB,GAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC;6BACrH,IAAI,CACD,CAAC,MAAM,EAAE,EAAE;4BACP,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC1C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACvB,CAAC,CACJ,CAAC;qBAEL;iBAEF;YAEL,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;oBAExC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,eAAe,CAAC,SAAc;QAC5B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3D,CAAC;CAIF;;YA/FmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACR,yEAAc;YACf,sEAAa;;AAd5B,uBAAuB;IAPnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,uMAA8D;QAE9D,SAAS,EAAC,CAAC,qEAAW,EAAE,yEAAc,EAAE,sEAAa,CAAC;;KACvD,CAAC;GAEW,uBAAuB,CAyGnC;AAzGmC;;;;;;;;;;;;AChBpC,+DAA+D,+K;;;;;;;;;;;;;;;;;;ACAb;AAEW;AAQ7D,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAQjC,YACU,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAHnC,YAAO,GAAY,KAAK,CAAC;QAKvB,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAClD,QAAQ,CAAC,EAAE;YACP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;gBACd,IAAI,CAAC,YAAY,GAAG,iCAAiC,CAAC;aACzD;iBAAI;gBACD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/D,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aAC1G;QACL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;IAEC,QAAQ;QAEN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAE,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,kCAAkC,CAAC;QACzD,CAAC,EAAE,IAAI,CAAC,CAAC;IAEX,CAAC;CAGF;;YA9CyB,qEAAW;;AATxB,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,uLAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAuDlC;AAvDkC;;;;;;;;;;;;ACVnC,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAElB;AACc;AACD;AACf;AACoB;AAUjE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAoB/B,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B,EAC3B,eAA+B;QAJ/B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QApBlC,aAAQ,GAAa,EAAE,CAAC;QAQxB,iBAAY,GAAY,EAAE,CAAC;QAC3B,iBAAY,GAAY,EAAE,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAY/B,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,0DAAK,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9D,CAAC;IAEF,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACjD,QAAQ,CAAC,EAAE;gBACT,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;oBACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;oBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;oBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;oBAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QAEN,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,YAAY;QAEN,KAAI,IAAI,CAAC,GAAC,CAAC,EAAG,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAG,CAAC,EAAE,EAAC;YAC7C,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACxD,QAAQ,CAAC,EAAE;gBACP,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC7C;YACL,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACF,CAAC;SACH;IACP,CAAC;CAEF;;YAzEmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACV,oEAAY;YACV,yEAAc;;AAzB9B,oBAAoB;IANhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,iLAA4C;QAE5C,SAAS,EAAE,CAAC,qEAAW,EAAE,oEAAY,EAAE,yEAAc,CAAC;;KACvD,CAAC;GACW,oBAAoB,CA8FhC;AA9FgC;;;;;;;;;;;;ACjBjC,yBAAyB,0BAA0B,OAAO,+CAA+C,2U;;;;;;;;;;;;;;;;;;ACAvD;AAEW;AAS7D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAM1B,YACU,YAAwB;QAAxB,iBAAY,GAAZ,YAAY,CAAY;QAEhC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEF,QAAQ;IACR,CAAC;CAEF;;YAXwB,qEAAW;;AAPvB,eAAe;IAN3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;QAEtC,SAAS,EAAC,CAAC,qEAAW,CAAC;;KACxB,CAAC;GACW,eAAe,CAkB3B;AAlB2B;;;;;;;;;;;;ACX5B,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AACJ;AACZ;AACU;AAEZ;AACc;AACO;AAepE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAgB7B,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,iBAAmC;QAHnC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,sBAAiB,GAAjB,iBAAiB,CAAkB;QAV7C,qBAAgB,GAAa,CAAC,OAAO,EAAE,WAAW,EAAE,aAAa,EAAC,UAAU,CAAC,CAAC;QAY5E,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE5C,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACvD,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,WAAW,EAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;oBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,wBAAwB,CAAC;oBAClE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IAEH,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAE5D,CAAC;IAGD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAC9D,QAAQ,CAAC,EAAE;YACP,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;gBACrB,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC/B;iBAAI;gBACH,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;CAEF;;YApFmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACN,4EAAgB;;AART;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;gDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;qDAAyB;AAbtD,kBAAkB;IAN9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,wKAAyC;QAEzC,SAAS,EAAC,CAAC,qEAAW,EAAE,4EAAgB,CAAC;;KAC1C,CAAC;GACW,kBAAkB,CAqG9B;AArG8B;;;;;;;;;;;;ACvB/B,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AACJ;AACZ;AACU;AAEZ;AACc;AACI;AAkBjE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAclC,YACY,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,eAA+B;QAH/B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAgB;QATzC,qBAAgB,GAAa,CAAC,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAWrG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,QAAQ;QACP,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,mCAAmC;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;IAEtB,CAAC;IAED,wCAAwC;IACvC,YAAY;QACX,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE1C,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,SAAS,EAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;oBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;oBACnC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;oBAChE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAE5D,CAAC;IAGD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,gBAAgB,CAAC,EAAE;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAC3D,QAAQ,CAAC,EAAE;YACP,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;gBACpB,wBAAwB;gBACxB,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC/B;iBAAI;gBACH,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,0CAA0C;gBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;CAEF;;YAnFqB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACR,yEAAc;;AAPL;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;qDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;0DAAyB;AAZxD,uBAAuB;IAPnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0LAA+C;QAE/C,SAAS,EAAC,CAAC,qEAAW,EAAE,yEAAc,CAAC;;KACxC,CAAC;GAEW,uBAAuB,CAkGnC;AAlGmC;;;;;;;;;;;;AC1BpC,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACI;AAElB;AACc;AACD;AAGC;AACZ;AACU;AAiB3D,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAe/B,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B;QAH3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAXrC,qBAAgB,GAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;QAa3E,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;YAE1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE;gBAET,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;oBAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;qBAAI;oBACH,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;oBAChC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;oBAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,0CAA0C;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACH,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,aAAa,CAAC,EAAE;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACpD,QAAQ,CAAC,EAAE;YACP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;gBACjB,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC/B;iBAAI;gBACH,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;CAEF;;YA9EmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACV,oEAAY;;AATD;IAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;kDAAe;AACT;IAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;uDAAyB;AAXtD,oBAAoB;IANhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,iLAA4C;QAE5C,SAAS,EAAC,CAAC,qEAAW,EAAE,oEAAY,CAAC;;KACtC,CAAC;GACW,oBAAoB,CA8FhC;AA9FgC;;;;;;;;;;;;AC3BjC,+GAA+G,gCAAgC,gCAAgC,KAAK,YAAY,4BAA4B,KAAK,kBAAkB,wBAAwB,KAAK,qBAAqB,4BAA4B,qBAAqB,KAAK,oCAAoC,qBAAqB,KAAK,gBAAgB,yBAAyB,KAAK,8BAA8B,yBAAyB,KAAK,oBAAoB,oBAAoB,qBAAqB,KAAK,4CAA4C,uCAAuC,+BAA+B,0CAA0C,kCAAkC,KAAK,eAAe,yCAAyC,iCAAiC,0CAA0C,kCAAkC,KAAK,mCAAmC,cAAc,uBAAuB,SAAS,YAAY,uBAAuB,SAAS,KAAK,2BAA2B,cAAc,uBAAuB,SAAS,YAAY,uBAAuB,SAAS,KAAK,iBAAiB,uCAAuC,uCAAuC,KAAK,+CAA+C,22E;;;;;;;;;;;;;;;;;ACA/wC;AAOlD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,kKAAuC;;KAExC,CAAC;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;ACP7B,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAElB;AACc;AACO;AACR;AAW5D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAkB5B,YACU,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B,EAC3B,iBAAmC;QAJnC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAkB;QAdtC,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACxC,kBAAa,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAe9C,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACtB,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,SAAS;QAEP,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,+BAA+B;QAC/B,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CACxG,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC;YACtC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;aAC1E;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAChD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAChG,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;aACrE;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5D,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,YAAY,GAAQ,KAAK,CAAC;YAC9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAE,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,aAAa;QACX,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;CAEF;;YA7EmB,8DAAc;YACb,sDAAM;YACD,qEAAW;YACV,oEAAY;YACR,4EAAgB;;AAvBlC,iBAAiB;IAN7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qKAAwC;QAExC,SAAS,EAAE,CAAC,qEAAW,EAAE,4EAAgB,EAAE,oEAAY,CAAC;;KACzD,CAAC;GACW,iBAAiB,CAgG7B;AAhG6B;;;;;;;;;;;;;ACjB9B;AAAA;AAAO,MAAM,SAAS;IAClB,YACW,KAAW,EACX,SAAiB,EACjB,WAAmB;QAFnB,UAAK,GAAL,KAAK,CAAM;QACX,cAAS,GAAT,SAAS,CAAQ;QACjB,gBAAW,GAAX,WAAW,CAAQ;IAC5B,CAAC;;;YAHe,IAAI;;;;;;;;;;;;;;;;ACF1B;AAAA;AAAO,MAAM,QAAQ;IACjB,YACW,MAAc,EACd,aAAqB,EACrB,YAAoB,EACpB,KAAa,EACb,KAAa;QAJb,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAQ;QACrB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;IACtB,CAAC;;;;;;;;;;;;;;;;;;;;;ACPP;AAAA;AAAO,MAAM,OAAO;IAChB,YACW,GAAW,EACX,MAAc,EACd,QAAgB,EAChB,KAAa,EACb,GAAW,EACX,QAAgB;QALhB,QAAG,GAAH,GAAG,CAAQ;QACX,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;QACX,aAAQ,GAAR,QAAQ,CAAQ;IACzB,CAAC;;;;;;;;;;;;;;;;;;;;;;ACRP;AAAA;AAAO,MAAM,KAAK;IACd,YACW,KAAW,EACX,MAAc,EACd,aAAqB,EACrB,cAAsB,EACtB,YAAoB,EACpB,SAAmB,EACnB,YAAsB,EACtB,UAAoB;QAPpB,UAAK,GAAL,KAAK,CAAM;QACX,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAQ;QACrB,mBAAc,GAAd,cAAc,CAAQ;QACtB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,cAAS,GAAT,SAAS,CAAU;QACnB,iBAAY,GAAZ,YAAY,CAAU;QACtB,eAAU,GAAV,UAAU,CAAU;IAC7B,CAAC;;;YARe,IAAI;;;;;;;;;;;;;;;;;;;;;ACF1B;AAAA;AAAO,IAAI,MAAM,GAAG;IAChB,GAAG,EAAE,2CAA2C;IAChD,EAAE,EAAE,WAAW;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;ACHyC;AACkC;AAE3C;AAIlC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAGzB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,sDAAsD;IACtD,cAAc,CAAC,KAAK;QAEhB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,yBAAyB,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjF,CAAC;IAED,8CAA8C;IAC9C,YAAY,CAAC,KAAK,EAAE,EAAS;QAEzB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,YAAY,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAEvE,CAAC;IAED,sCAAsC;IACtC,eAAe,CAAC,KAAK,EAAE,EAAS,EAAE,SAAoB;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,YAAY,GAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,qBAAqB;IACrB,cAAc,CAAC,KAAK,EAAE,SAAoB;QACtC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvD,CAAC,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,+BAA+B;IAC/B,sBAAsB,CAAC,KAAK,EAAE,SAAiB,EAAE,SAAiB;QAE9D,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,YAAY,GAAC,SAAS,GAAC,GAAG,GAAC,SAAS,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC5F,CAAC;IAED,wBAAwB;IACxB,iBAAiB,CAAC,KAAK,EAAE,EAAS;QAE9B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,YAAY,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1E,CAAC;CAEJ;;YAjE8B,+DAAU;;AAH5B,gBAAgB;IAD5B,gEAAU,EAAE;GACA,gBAAgB,CAoE5B;AApE4B;;;;;;;;;;;;;;;;;;;;ACPc;AACkC;AAE3C;AAIlC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAGvB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,mDAAmD;IACnD,eAAe,CAAC,KAAK;QAEjB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,uBAAuB,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC/E,CAAC;IAED,0CAA0C;IAC1C,WAAW,CAAC,KAAK,EAAE,EAAS;QAExB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,WAAW,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAEtE,CAAC;IAED,8CAA8C;IAC9C,aAAa,CAAC,KAAK,EAAE,QAAkB;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvD,CAAC,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,wCAAwC;IACxC,cAAc,CAAC,KAAK,EAAE,EAAS,EAAE,QAAkB;QAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,WAAW,GAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,sDAAsD;IACtD,gBAAgB,CAAC,KAAK,EAAE,EAAS;QAE7B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,WAAW,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACzE,CAAC;CAGJ;;YAxD8B,+DAAU;;AAH5B,cAAc;IAD1B,gEAAU,EAAE;GACA,cAAc,CA2D1B;AA3D0B;;;;;;;;;;;;;;;;;;;;ACPgB;AACoB;AAE7B;AAIlC,IAAa,aAAa,GAA1B,MAAa,aAAa;IAGtB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,+DAA+D;IAC/D,eAAe,CAAC,GAAW,EAAE,MAAqB,EAAE,KAAiB,EAAE,KAAa,EAAE,IAAY;QAE9F,OAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACvC,IAAI,QAAQ,GAAQ,IAAI,QAAQ,EAAE,CAAC;YACnC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAE/B,KAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC9B,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAClD;YAED,GAAG,CAAC,kBAAkB,GAAG;gBACzB,IAAG,GAAG,CAAC,UAAU,IAAI,CAAC,EAAC;oBACnB,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;wBACrB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACjC;yBAAI;wBACL,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBACpB;iBACJ;YACD,CAAC;YAED,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YAC7C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEvB,CAAC,CAAC,CAAC;IAEP,CAAC;CAEJ;;YAjC8B,+DAAU;;AAH5B,aAAa;IADzB,gEAAU,EAAE;GACA,aAAa,CAoCzB;AApCyB;;;;;;;;;;;;;;;;;;;;ACPiB;AACkC;AAE3C;AAGlC,IAAa,WAAW,GAAxB,MAAa,WAAW;IAKpB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,aAAa,EAAE,OAAO,GAAG,IAAI;QAChC,IAAG,OAAO,IAAI,IAAI,EAAC;YACf,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;SACnC;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ,CAAC,gBAAgB;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAE9E,CAAC;IAED,UAAU,CAAC,cAAc;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC5C,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACjC,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,qBAAqB,GAAC,cAAc,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAE3G,CAAC;IAED,WAAW;QACP,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5D,IAAG,QAAQ,IAAI,WAAW,EAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;aAAI;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,QAAQ;QACJ,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAG,KAAK,IAAI,WAAW,EAAC;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;aAAI;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CAEJ;;YAzD8B,+DAAU;;AAL5B,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CA8DvB;AA9DuB;;;;;;;;;;;;;;;;;;;;ACNmB;AACmB;AAE5B;AAMlC,IAAa,YAAY,GAAzB,MAAa,YAAY;IAGrB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,aAAa;IACb,SAAS,CAAC,KAAK,EAAE,KAAY;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAC,OAAO,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvE,CAAC;IAED,mBAAmB;IACnB,QAAQ,CAAC,KAAK,EAAE,EAAS;QAEvB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,QAAQ,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,gBAAgB;IAChB,SAAS,CAAC,KAAK;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,QAAQ,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,uCAAuC;IACvC,WAAW,CAAC,KAAK,EAAE,EAAS,EAAE,KAAY;QACxC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,QAAQ,GAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB;IAChB,WAAW,CAAC,KAAK,EAAE,EAAS;QAE1B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,QAAQ,GAAC,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB,CAAC,KAAK,EAAE,SAAiB,EAAE,SAAiB;QAE5D,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACrD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,QAAQ,GAAC,SAAS,GAAC,GAAG,GAAC,SAAS,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACxF,CAAC;CAEF;;YA5D8B,+DAAU;;AAH5B,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CA+DxB;AA/DwB;;;;;;;;;;;;;ACTzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--LOGUEADO###############################################################################################-->\\r\\n<mat-sidenav-container *ngIf=\\\"identity\\\" class=\\\"sidenav-container\\\">\\r\\n\\r\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\" [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"(isHandset$ | async) === false\\\">\\r\\n\\r\\n        <mat-nav-list class=\\\"nav-list\\\">\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/inicio']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">home \\r\\n                </span>Inicio\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/buscar']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">search\\r\\n                </span>Buscar\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/productos']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">shopping_cart\\r\\n                </span>Productos\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/ventas']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">attach_money\\r\\n                </span>Ventas\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/inversion']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">money_off\\r\\n                </span>Inversiones\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/reportes']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">trending_up\\r\\n                </span>Reportes\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item [routerLink]=\\\"['/mis-datos']\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">account_circle\\r\\n                </span>Mis datos\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <a mat-list-item href=# (click)=\\\"logout()\\\" class=\\\"btn-logout\\\">\\r\\n                <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">exit_to_app\\r\\n                </span>Salir\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n        </mat-nav-list>\\r\\n\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content>\\r\\n\\r\\n        <div [class.hidden]=\\\"!identity\\\" class=\\\"central\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<!--NO LOGUEADO###############################################################################################-->\\r\\n\\r\\n<div *ngIf=\\\"!identity\\\">\\r\\n    <!--class=\\\"fixed-top\\\"-->\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n        <span class=\\\"spacer\\\"></span>\\r\\n        <mat-icon class=\\\"icono-vg\\\" aria-hidden=\\\"false\\\">home</mat-icon>\\r\\n        <h3>Almacen Veronica Godoy Coltters</h3>\\r\\n        <span class=\\\"spacer\\\"></span>\\r\\n    </mat-toolbar>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col col-lg-14\\\" *ngIf=\\\"!identity\\\">\\r\\n\\r\\n    <!--INICIAR-SESION##########################################################################################-->\\r\\n    <mat-tab-group>\\r\\n        <mat-tab label=\\\"INICIAR SESIÓN\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <div class=\\\"well well-sm\\\">\\r\\n                            <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                                <h1 class=\\\"text-left header\\\">INICIAR SESIÓN</h1>\\r\\n\\r\\n                                <div *ngIf=\\\"errorMessage\\\" class=\\\"col-md-8\\\">\\r\\n                                    <div class=\\\"alert alert-info\\\">\\r\\n                                        <strong>Error</strong> {{errorMessage}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Rut:</label>\\r\\n                                        <input type=\\\"text\\\" #rut=\\\"ngModel\\\" name=\\\"rut\\\" [(ngModel)]=\\\"usuario.rut\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!rut.valid && rut.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            El Rut es obligatorio\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Contraseña:</label>\\r\\n                                        <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"usuario.password\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!password.valid && password.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            La Contraseña es obligatoria\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8 text-right\\\">\\r\\n                                        <button mat-raised-button color=\\\"primary\\\">Aceptar</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <!--REGISTRO##########################################################################################-->\\r\\n        <!-- <mat-tab label=\\\"REGISTRO\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <div class=\\\"well well-sm\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRegister()\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                                <h1 class=\\\"text-left header\\\">REGISTRO</h1>\\r\\n\\r\\n                                <div *ngIf=\\\"alertRegister\\\" class=\\\"col-md-8\\\">\\r\\n                                    <div class=\\\"alert alert-info\\\">\\r\\n                                        {{alertRegister}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Nombre:</label>\\r\\n                                        <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"usuario_registro.nombre\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!nombre.valid && nombre.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            El Nombre es obligatorio\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Apellido:</label>\\r\\n                                        <input type=\\\"text\\\" #apellido=\\\"ngModel\\\" name=\\\"apellido\\\" [(ngModel)]=\\\"usuario_registro.apellido\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!apellido.valid && apellido.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            El Apellido es obligatorio\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Email:</label>\\r\\n                                        <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"usuario_registro.email\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!email.valid && email.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            El Email es obligatorio\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Rut:</label>\\r\\n                                        <input type=\\\"text\\\" #rut=\\\"ngModel\\\" name=\\\"rut\\\" [(ngModel)]=\\\"usuario_registro.rut\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!rut.valid && rut.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            El Rut es obligatorio\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <label>Contraseña:</label>\\r\\n                                        <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"usuario_registro.password\\\" class=\\\"form-control\\\" required>\\r\\n                                        <span *ngIf=\\\"!password.valid && password.touched\\\" class=\\\"span-alert\\\">\\r\\n                                            La Contraseña es obligatoria\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-8 text-right\\\">\\r\\n                                        <button mat-raised-button color=\\\"primary\\\">Registrarse</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </mat-tab> -->\\r\\n\\r\\n    </mat-tab-group>\\r\\n\\r\\n    <div class=\\\"fixed-bottom\\\">\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <span class=\\\"spacer\\\"></span>\\r\\n            <h3>© Copyright ecald 2020</h3>\\r\\n            <span class=\\\"spacer\\\"></span>\\r\\n        </mat-toolbar>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">search\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar Producto\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Columna Número -->\\r\\n        <ng-container matColumnDef=\\\"nro\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> N° </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction; let i = index\\\"> {{i+1}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Columna Nombre -->\\r\\n        <ng-container matColumnDef=\\\"nombre\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Producto </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.nombre}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Compra-->\\r\\n        <ng-container matColumnDef=\\\"precio_compra\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio de Compra </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_compra}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Venta-->\\r\\n        <ng-container matColumnDef=\\\"precio_venta\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio de Venta </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_venta}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Stock-->\\r\\n        <ng-container matColumnDef=\\\"stock\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad Disponible </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.stock}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Imagen-->\\r\\n        <ng-container matColumnDef=\\\"image\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Imagen </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n                <div *ngIf=\\\"transaction.image != 'null'\\\">\\r\\n                    <img src=\\\"{{ url + 'get-image-producto/' + transaction.image}}\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"transaction.image == 'null'\\\">\\r\\n                    <img src=\\\"../../../assets/imagenes/noimage.png\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                </div>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Footer-->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">search\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">search\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Columna Fecha venta -->\\r\\n        <ng-container matColumnDef=\\\"fecha\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.fecha | date:'medium'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Venta<-->\\r\\n        <ng-container matColumnDef=\\\"precio_total\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_total}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Estado-->\\r\\n        <ng-container matColumnDef=\\\"estado\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.estado}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"opciones\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Opciones </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/editar-venta', transaction._id]\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; width:120px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE417;</i>Ver Detalle\\r\\n                </button>\\r\\n\\r\\n            </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Footer-->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">search\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"tarjetas\\\">\\r\\n\\r\\n    <div style=\\\"text-align: left; margin-top: 30px; margin-bottom: 40px;\\\">\\r\\n        <p class=\\\"lead\\\">En esta sección puede buscar todos los datos almacenados que se encuentran en la base de datos del sistema, puede seleccionar cualquiera de las opciones mostradas en la parte de abajo para buscar algo si es que lo considera necesario.\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-deck\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <img src=\\\"../../../assets/imagenes/productos.jpg\\\" class=\\\"card-img-top\\\" height=\\\"210\\\" alt=\\\"...\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Buscar Productos</h5>\\r\\n                <p class=\\\"card-text\\\">Seleccione esta opción para encontrar <strong>productos</strong> que esten almacenados en el sistema</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <small class=\\\"text-muted\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/buscar-productos']\\\">\\r\\n                    <i class=\\\"material-icons\\\">search</i>Buscar Productos\\r\\n                </button>\\r\\n                </small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n            <img src=\\\"../../../assets/imagenes/venta.jpg\\\" class=\\\"card-img-top\\\" height=\\\"210\\\" alt=\\\"...\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Buscar Ventas</h5>\\r\\n                <p class=\\\"card-text\\\">Seleccione esta opción para encontrar las <strong>ventas</strong> que se han realizado a lo largo del sistema.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <small class=\\\"text-muted\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/buscar-ventas']\\\">\\r\\n                        <i class=\\\"material-icons\\\">search</i>Buscar Ventas\\r\\n                    </button>\\r\\n                </small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n            <img src=\\\"../../../assets/imagenes/reportes.jpg\\\" class=\\\"card-img-top\\\" height=\\\"210\\\" alt=\\\"...\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Buscar Reportes</h5>\\r\\n                <p class=\\\"card-text\\\">Seleccione esta opción para encontrar los <strong>reportes</strong> que se han generado debido a las ventas concretadas.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <small class=\\\"text-muted\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reportes']\\\">\\r\\n                        <i class=\\\"material-icons\\\">search</i>Buscar Reportes\\r\\n                    </button>\\r\\n                </small>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">money_off\\n    </span>\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\n</mat-toolbar>\\n\\n<div class=\\\"col-lg-12\\\" *ngIf=\\\"identity\\\">\\n    <form #inversionForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\n\\n        <hr>\\n        <div *ngIf=\\\"alertMessage\\\" style=\\\"margin-top: 5px;\\\" class=\\\"col-md-4\\\">\\n            <div class=\\\"alert alert-info\\\">\\n                {{alertMessage}}\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <label>Fecha:</label>\\n                <input type=\\\"date\\\" #fecha=\\\"ngModel\\\" name=\\\"fecha\\\" [(ngModel)]=\\\"inversion_realizada.fecha\\\" class=\\\"form-control\\\" required>\\n                <span *ngIf=\\\"!fecha.valid && fecha.touched\\\" class=\\\"span-alert\\\">\\n                    Recuerde ingresar la fecha\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <label>Inversión: $</label>\\n                <input type=\\\"number\\\" min=\\\"1\\\" name=\\\"inversion\\\" #inversion=\\\"ngModel\\\" [(ngModel)]=\\\"inversion_realizada.inversion\\\" class=\\\"form-control\\\" required>\\n                <span *ngIf=\\\"!inversion.valid && inversion.touched\\\" class=\\\"span-alert\\\">\\n                    La inversión debe tener un valor numerico\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label>Comentarios:</label>\\n                <hr>\\n                <textarea style=\\\"width: 100%; height: 210px;\\\" name=\\\"comentarios\\\" #comentarios=\\\"ngModel\\\" [(ngModel)]=\\\"inversion_realizada.comentarios\\\" placeholder=\\\"Comentarios sobre factura o inversiones realizadas...\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-6 text-right\\\">\\n                <button mat-raised-button color=\\\"primary\\\" name=\\\"button\\\" [disabled]=\\\"loading || !inversionForm.valid\\\">\\n                    <i [ngClass]=\\\"{ 'fa-save': !loading, 'fa-refresh fa-spin': loading }\\\"  class=\\\"fa\\\"></i> \\n                    <span style=\\\"margin-left: 5px;\\\" *ngIf=\\\"!loading\\\">Guardar inversion</span>\\n                    <span style=\\\"margin-left: 5px;\\\" *ngIf=\\\"loading\\\">Espere por favor</span>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <mat-divider></mat-divider>\\n\\n    </form>\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">shopping_cart\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"col-lg-8\\\" *ngIf=\\\"identity\\\">\\r\\n    <form #formProducto=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n        <hr>\\r\\n        <div *ngIf=\\\"alertMessage\\\" class=\\\"col-md-8\\\">\\r\\n            <div class=\\\"alert alert-info\\\">\\r\\n                {{alertMessage}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <label>Nombre:</label>\\r\\n                <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"producto.nombre\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!nombre.valid && nombre.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El Nombre del producto es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <label>Precio de Compra (Unitario):</label>\\r\\n                <input type=\\\"number\\\" min=\\\"0\\\" #precio_compra=\\\"ngModel\\\" name=\\\"precio_compra\\\" [(ngModel)]=\\\"producto.precio_compra\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!precio_compra.valid && precio_compra.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El precio de compra es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <label>Precio de Venta (Unitario):</label>\\r\\n                <input type=\\\"number\\\" min=\\\"0\\\" #precio_venta=\\\"ngModel\\\" name=\\\"precio_venta\\\" [(ngModel)]=\\\"producto.precio_venta\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!precio_venta.valid && precio_venta.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El precio de venta es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <label>Stock o Cantidad:</label>\\r\\n                <input type=\\\"number\\\" min=\\\"0\\\" #stock=\\\"ngModel\\\" name=\\\"stock\\\" [(ngModel)]=\\\"producto.stock\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!stock.valid && stock.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El stock es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"is_edit\\\" class=\\\"form-group\\\">\\r\\n            <!--se muestra solo si exsite is_edit-->\\r\\n\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"product_image_for_edit\\\" *ngIf=\\\"producto.image != 'null'\\\">\\r\\n                    <img src=\\\"{{url + 'get-image-producto/' + producto.image }}\\\" />\\r\\n                    <p><label>Subir o Actualizar imagen del Producto:</label></p>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"product_image_for_edit\\\" *ngIf=\\\"producto.image == 'null'\\\">\\r\\n                    <img src=\\\"../../../assets/imagenes/noimage.png\\\" />\\r\\n                    <p><label>Sube la imagen del Producto:</label></p>\\r\\n                </div>\\r\\n\\r\\n                <p>\\r\\n                    <input type=\\\"file\\\" placeholder=\\\"Subir imagen...\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n                </p>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8 text-right\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formProducto.valid\\\">\\r\\n                    <i class=\\\"fa fa-save\\\"></i> Guardar producto\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n\\r\\n\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-lg-6\\\" *ngIf=\\\"!identity\\\">\\r\\n    <h1>Error</h1>\\r\\n    <p>No tienes acceso a esta parte de la aplicación</p>\\r\\n</div>\"","module.exports = \"<div>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n        <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">attach_money\\r\\n    </span>\\r\\n        <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <!--Mostrar Productos para añadir al carro-->\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n                <h1 style=\\\"color: #3f51b5;\\\">Seleccionar Productos</h1>\\r\\n                <hr>\\r\\n                <div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar productos\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n                        <!--Columna Imagen-->\\r\\n                        <ng-container matColumnDef=\\\"image\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n                                <div *ngIf=\\\"transaction.image != 'null'\\\">\\r\\n                                    <img src=\\\"{{ url + 'get-image-producto/' + transaction.image}}\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"transaction.image == 'null'\\\">\\r\\n                                    <img src=\\\"../../../assets/imagenes/noimage.png\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!-- Columna Nombre -->\\r\\n                        <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Producto </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.nombre}} </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!--Columna Precio Venta-->\\r\\n                        <ng-container matColumnDef=\\\"precio_venta\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio Venta </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_venta}} </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!--Columna Stock-->\\r\\n                        <ng-container matColumnDef=\\\"stock\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad Disponible </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.stock}} </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!--Columna Agregar cantidad-->\\r\\n                        <ng-container matColumnDef=\\\"cantidad\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Cantidad a Agregar</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction, let i = index\\\">\\r\\n                                <div *ngIf=\\\"!transaction.stock == 0\\\">\\r\\n\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <input type=\\\"number\\\" name=\\\"cantidad_ingresada\\\" min=\\\"1\\\" max=\\\"{{transaction.stock}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cantidad_ing[i]\\\" required>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!--Columna Botones-->\\r\\n                        <ng-container matColumnDef=\\\"opciones\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Opciones </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let transaction, let i = index\\\">\\r\\n\\r\\n                                <div *ngIf=\\\"!transaction.stock == 0\\\">\\r\\n\\r\\n                                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"anadirProducto(transaction._id, transaction.nombre, transaction.precio_venta, transaction.stock, (cantidad_ing[i]))\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; margin-bottom: 2%; width:100px; height:36px\\\">\\r\\n                                    <i class=\\\"material-icons\\\">add_shopping_cart</i>Añadir \\r\\n                                </button>\\r\\n\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"transaction.stock == 0\\\">\\r\\n                                    <span class=\\\"span-alert\\\">Producto Agotado!</span>\\r\\n                                </div>\\r\\n\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <!--Footer-->\\r\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                    </table>\\r\\n                    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!--Mostrar Prodcutos que han sido asginado a la venta----| paso por arreglo -- [idproducto]=\\\"pasarle el id del producto\\\" [idproducto]=\\\"[pasarnombre, pasarprecio, pasarcantidad]\\\">-->\\r\\n            <div class=\\\"col\\\">\\r\\n                <app-datos-venta [id_producto]=\\\"pasarid\\\" [nombre_producto]=\\\"pasarnombre\\\" [precio_producto]=\\\"pasarprecio\\\" [cant_producto]=\\\"pasarcantidad\\\" [nro_producto]=\\\"nro\\\" [total_productos]=\\\"total_productos\\\" [total_precio]=\\\"total_precio\\\" [id_prods]=\\\"id_productos\\\" [cant_prods]=\\\"prodCantidad\\\"\\r\\n                    [precios_prods]=\\\"prodPrecio\\\" [array]=\\\"foros\\\">\\r\\n                </app-datos-venta>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"<form #VentaForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\r\\n    <hr>\\r\\n    <h1 style=\\\"color: #3f51b5;\\\">Datos de Venta</h1>\\r\\n    <hr>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Fecha</mat-label>\\r\\n                <input matInput value=\\\"{{fecha_ | date:'medium'}}\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Opcion de Venta</mat-label>\\r\\n                        <mat-select [(value)]=\\\"selected\\\">\\r\\n                            <mat-option value=\\\"Vendido\\\">Vendido</mat-option>\\r\\n                            <mat-option value=\\\"Fiado\\\">Fiado</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" *ngIf=\\\"selected == 'Fiado'\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Nombre Fiador</mat-label>\\r\\n                        <input matInput placeholder=\\\"Ejm: Eduardo Caldera\\\" #nombre_fiador=\\\"ngModel\\\" name=\\\"nombre_fiador\\\" [(ngModel)]=\\\"venta.nombre_fiador\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <label><strong style=\\\"color: #3f51b5;\\\">Productos agregados: {{total_productos}}</strong></label>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Producto</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Cantidad</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Precio Unitario</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Precio Total</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let arr of array;let i = index\\\">\\r\\n                        <td>{{arr[\\\"nombre\\\"]}}</td>\\r\\n                        <td>x{{arr[\\\"cant_vendidad\\\"]}}</td>\\r\\n                        <td>{{arr[\\\"precio\\\"]}}</td>\\r\\n                        <td>{{arr[\\\"precio_total\\\"]}}</td>\\r\\n                        <!--<td> \\r\\n                        <button mat-raised-button class=\\\"material-icons\\\" color=\\\"warn\\\" (click)=\\\"eliminarFila(i)\\\" style=\\\"margin-top: 2%; width:10px; height:36px\\\">\\r\\n                            <i class=\\\"material-icons\\\">&#xE872;</i> \\r\\n                        </button>\\r\\n                    </td>-->\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <mat-divider></mat-divider>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <label><strong style=\\\"color: #3f51b5;\\\">Total Precio: $ {{total_precio}}</strong></label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-md-12 text-right\\\">\\r\\n\\r\\n            <div *ngIf=\\\"alertMessage\\\" style=\\\"margin-top: 5px;\\\" class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"alert alert-danger\\\">\\r\\n                    {{alertMessage}}\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-right: 2%; width:100px; height:36px\\\">\\r\\n                <i class=\\\"material-icons\\\">shopping_cart</i>Aceptar \\r\\n            </button>\\r\\n\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"refresh()\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                <i class=\\\"material-icons\\\">remove_shopping_cart</i>Vaciar\\r\\n            </button>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n</form>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">account_circle\\r\\n        </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"col-lg-12\\\" *ngIf=\\\"identity\\\">\\r\\n    <form #userUpdateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n        <hr>\\r\\n        <div *ngIf=\\\"alertMessage\\\" style=\\\"margin-top: 5px;\\\" class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"alert alert-info\\\">\\r\\n                {{alertMessage}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>Nombre:</label>\\r\\n                <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"usuario.nombre\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!nombre.valid && nombre.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El Nombre es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>Apellido:</label>\\r\\n                <input type=\\\"text\\\" #apellido=\\\"ngModel\\\" name=\\\"apellido\\\" [(ngModel)]=\\\"usuario.apellido\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!apellido.valid && apellido.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El Apellido es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>Email:</label>\\r\\n                <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"usuario.email\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!email.valid && email.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El Email es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>Rut:</label>\\r\\n                <input type=\\\"text\\\" #rut=\\\"ngModel\\\" name=\\\"rut\\\" [(ngModel)]=\\\"usuario.rut\\\" class=\\\"form-control\\\" required>\\r\\n                <span *ngIf=\\\"!rut.valid && rut.touched\\\" class=\\\"span-alert\\\">\\r\\n                    El Rut es obligatorio\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4 text-right\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" name=\\\"button\\\" [disabled]=\\\"loading\\\">\\r\\n                    <i [ngClass]=\\\"{ 'fa-user': !loading, 'fa-refresh fa-spin': loading }\\\"  class=\\\"fa\\\"></i>\\r\\n                    <span style=\\\"margin-left: 5px;\\\" *ngIf=\\\"!loading\\\">Actualizar datos</span>\\r\\n                    <span style=\\\"margin-left: 5px;\\\" *ngIf=\\\"loading\\\">Espere por favor</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n\\r\\n    </form>\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">attach_money\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"col-md-12\\\" style=\\\"margin-top: 2%;\\\">\\r\\n\\r\\n    <form #VentaForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form-horizontal\\\">\\r\\n        <hr>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Fecha</mat-label>\\r\\n                    <input matInput name=\\\"fecha\\\" value=\\\"{{fecha_ | date:'medium'}}\\\" disabled>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Opcion de Venta</mat-label>\\r\\n                            <mat-select [(value)]=\\\"selected\\\" disabled>\\r\\n                                <mat-option value=\\\"Vendido\\\">Vendido</mat-option>\\r\\n                                <mat-option value=\\\"Fiado\\\">Fiado</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\" *ngIf=\\\"selected == 'Fiado'\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Nombre Fiador</mat-label>\\r\\n                            <input matInput #nombre_fiador=\\\"ngModel\\\" name=\\\"nombre_fiador\\\" [(ngModel)]=\\\"venta.nombre_fiador\\\" disabled>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Productos agregados</mat-label>\\r\\n                    <input matInput #cant_productos=\\\"ngModel\\\" name=\\\"cant_productos\\\" [(ngModel)]=\\\"venta.cant_productos\\\" disabled>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-8\\\" style=\\\"margin-right: 0px;\\\">\\r\\n                            <table class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Producto</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let arr of producto; let i = index\\\">\\r\\n                                        <td> {{arr}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\" style=\\\"margin-left: -30px;\\\">\\r\\n                            <table class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Cantidad</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let cantidad of prodCantidad\\\">\\r\\n                                        <td> {{cantidad}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\" style=\\\"margin-left: -30px;\\\">\\r\\n                            <table class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th scope=\\\"col\\\" style=\\\"color: #3f51b5;\\\">Precio</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let precio of prodPrecio\\\">\\r\\n                                        <td> {{precio}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Total Precio: $</mat-label>\\r\\n                    <input matInput #precio_total=\\\"ngModel\\\" name=\\\"precio_total\\\" [(ngModel)]=\\\"venta.precio_total\\\" disabled>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-8 text-right\\\">\\r\\n\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/ventas']\\\" routerLinkActive=\\\"router-link-active\\\" style=\\\"margin-right: 2%; width:100px; height:36px\\\">\\r\\n                    Aceptar\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">home\\r\\n    </span>\\r\\n<h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<body class=\\\"home\\\">\\r\\n\\r\\n    <!-- Page Content -->\\r\\n    <div class=\\\"container\\\">\\r\\n  \\r\\n      <!-- Jumbotron Header -->\\r\\n      <header class=\\\"jumbotron my-4\\\">\\r\\n        <h1 class=\\\"display-3\\\">{{identity.nombre}} {{identity.apellido}}</h1> \\r\\n        <p class=\\\"lead\\\">Para comenzar a trabajar puede seleccionar algunos de los modulos mostrados en la seccion de abajo o navegar a traves de la barra lateral izquierda.</p>\\r\\n        \\r\\n      </header>\\r\\n  \\r\\n      <!-- Page Features -->\\r\\n      <div class=\\\"row text-center\\\">\\r\\n  \\r\\n        <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n          <div class=\\\"card h-100\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"../../../assets/imagenes/productos.jpg\\\" width=\\\"325\\\" height=\\\"170\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h4 class=\\\"card-title\\\">Productos</h4>\\r\\n              <p class=\\\"card-text\\\">Modulo para agregar, modificar, mostrar y eliminar todos los productos del almacen.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/productos']\\\">Modulo Productos</button>  \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n          <div class=\\\"card h-100\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"../../../assets/imagenes/venta.jpg\\\" width=\\\"325\\\" height=\\\"170\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h4 class=\\\"card-title\\\">Ventas</h4>\\r\\n              <p class=\\\"card-text\\\">Modulo para agregar, modificar, mostrar y eliminar todas las ventas que realiza el almacen.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/ventas']\\\">Modulo Ventas</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n          <div class=\\\"card h-100\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"../../../assets/imagenes/reportes.jpg\\\" width=\\\"325\\\" height=\\\"170\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h4 class=\\\"card-title\\\">Reportes</h4>\\r\\n              <p class=\\\"card-text\\\">Modulo para generar reportes de ganacias del almacen.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reportes']\\\">Modulo Reportes</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n          <div class=\\\"card h-100\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"../../../assets/imagenes/mis-datos.jpg\\\" width=\\\"325\\\" height=\\\"170\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h4 class=\\\"card-title\\\">Mis Datos</h4>\\r\\n              <p class=\\\"card-text\\\">En esta sección podra modificar los datos actuales almacenados del usuario</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/mis-datos']\\\">Mis datos</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n      <!-- /.row -->\\r\\n  \\r\\n    </div>\\r\\n    <!-- /.container -->\\r\\n  \\r\\n  </body>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">money_off\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"separador\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row align-items-start\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/crear-inversion']\\\">\\r\\n                <i class=\\\"material-icons\\\">add</i>Añadir Inversión</button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar inversiones\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Columna Fecha -->\\r\\n        <ng-container matColumnDef=\\\"fecha\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.fecha | date:'medium'}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Inversion-->\\r\\n        <ng-container matColumnDef=\\\"inversion\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Inversion </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.inversion}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Comentarios-->\\r\\n        <ng-container matColumnDef=\\\"comentarios\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Comentarios </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n                <textarea style=\\\"width: 90%; height: 50px;\\\" name=\\\"comentarios\\\" #comentarios=\\\"ngModel\\\" [(ngModel)]=\\\"transaction.comentarios\\\" disabled></textarea>\\r\\n                <!-- {{transaction.comentarios}} -->\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Botones-->\\r\\n        <ng-container matColumnDef=\\\"opciones\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Opciones </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/editar-inversion', transaction._id]\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; width:100px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE254;</i>Editar\\r\\n                </button>\\r\\n\\r\\n                <button (click)=\\\"onDeleteConfirm(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE872;</i>Borrar\\r\\n                </button>\\r\\n\\r\\n                <div class=\\\"seguro\\\" *ngIf=\\\"confirmado == transaction._id\\\">\\r\\n\\r\\n                    <button (click)=\\\"onDeleteInversion(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; margin-top: 2%; width:100px; height:36px\\\">\\r\\n                        Eliminar\\r\\n                    </button>\\r\\n\\r\\n                    <button (click)=\\\"onCancelInversion()\\\" mat-raised-button color=\\\"primary\\\" class=\\\"material-icons\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                        Cancelar\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Footer-->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">shopping_cart\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"separador\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row align-items-start\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/crear-producto']\\\">\\r\\n                <i class=\\\"material-icons\\\">add</i>Añadir Producto\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar Producto\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Columna Nombre -->\\r\\n        <ng-container matColumnDef=\\\"nombre\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Producto </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.nombre}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Compra-->\\r\\n        <ng-container matColumnDef=\\\"precio_compra\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio de Compra </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_compra}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Venta-->\\r\\n        <ng-container matColumnDef=\\\"precio_venta\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio de Venta </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_venta}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Stock-->\\r\\n        <ng-container matColumnDef=\\\"stock\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad Disponible </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.stock}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Imagen-->\\r\\n        <ng-container matColumnDef=\\\"image\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Imagen </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n                <div *ngIf=\\\"transaction.image != 'null'\\\">\\r\\n                    <img src=\\\"{{ url + 'get-image-producto/' + transaction.image}}\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"transaction.image == 'null'\\\">\\r\\n                    <img src=\\\"../../../assets/imagenes/noimage.png\\\" style=\\\"width: 80px; height: 80px;\\\" />\\r\\n                </div>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Botones-->\\r\\n        <ng-container matColumnDef=\\\"opciones\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Opciones </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/editar-producto', transaction._id]\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; width:100px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE254;</i>Editar\\r\\n                </button>\\r\\n\\r\\n                <button (click)=\\\"onDeleteConfirm(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE872;</i>Borrar \\r\\n                </button>\\r\\n\\r\\n                <div class=\\\"seguro\\\" *ngIf=\\\"confirmado == transaction._id\\\">\\r\\n\\r\\n                    <button (click)=\\\"onDeleteProducto(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; margin-top: 2%; width:100px; height:36px\\\">\\r\\n                            Eliminar\\r\\n                        </button>\\r\\n\\r\\n                    <button (click)=\\\"onCancelProducto()\\\" mat-raised-button color=\\\"primary\\\" class=\\\"material-icons\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                            Cancelar\\r\\n                        </button>\\r\\n                </div>\\r\\n\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Footer-->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n\\r\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">attach_money\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"separador\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row align-items-start\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/crear-venta']\\\">\\r\\n                <i class=\\\"material-icons\\\">add</i>Añadir Venta\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n        <div class=\\\"col\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div class=\\\"mostrar-listas\\\" *ngIf=\\\"identity\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Columna Fecha venta -->\\r\\n        <ng-container matColumnDef=\\\"fecha\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.fecha | date:'medium'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Precio Venta<-->\\r\\n        <ng-container matColumnDef=\\\"precio_total\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.precio_total}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna Estado-->\\r\\n        <ng-container matColumnDef=\\\"estado\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.estado}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Columna opciones-->\\r\\n        <ng-container matColumnDef=\\\"opciones\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Opciones </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/editar-venta', transaction._id]\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; width:120px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE417;</i>Ver Detalle\\r\\n                </button>\\r\\n\\r\\n                <button (click)=\\\"onDeleteConfirm(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; width:90px; height:36px\\\">\\r\\n                    <i class=\\\"material-icons\\\">&#xE872;</i>Borrar\\r\\n                </button>\\r\\n\\r\\n                <div class=\\\"seguro\\\" *ngIf=\\\"confirmado == transaction._id\\\">\\r\\n\\r\\n                    <a (click)=\\\"onDeleteVenta(transaction._id)\\\" mat-raised-button color=\\\"warn\\\" class=\\\"material-icons\\\" style=\\\"margin-right: 2%; margin-top: 2%; width:100px; height:36px\\\">\\r\\n                            Eliminar\\r\\n                        </a>\\r\\n\\r\\n                    <a (click)=\\\"onCancelVenta()\\\" mat-raised-button color=\\\"primary\\\" class=\\\"material-icons\\\" style=\\\"width:100px; height:36px\\\">\\r\\n                            Cancelar\\r\\n                        </a>\\r\\n                </div>\\r\\n\\r\\n            </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--Footer-->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"row text-center animated fadeIn\\\">\\n    <div class=\\\"col\\\">\\n        <i class=\\\"fas fa-sync fa-spin fa-5x\\\" style=\\\"color: #3f51b5;\\\"></i>\\n    </div>\\n</div>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">trending_up\\r\\n    </span>\\r\\n    <h1 class=\\\"text-left\\\">{{titulo}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"margin-top: 20px; margin-bottom: 20px;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            <label>Fecha inicio:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fecha_inicio\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            <label>Fecha termino:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fecha_termino\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button (click)=\\\"consultar()\\\" mat-raised-button color=\\\"primary\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>Consultar\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<mat-divider></mat-divider>\\r\\n<br>\\r\\n\\r\\n<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div *ngIf=\\\"mostrar\\\" style=\\\"text-align: center;\\\">\\r\\n    <h1 style=\\\"color: #3f51b5; text-align: center;\\\">Información de Reporte</h1>\\r\\n    <br>\\r\\n\\r\\n    <aside id=\\\"sidebar\\\">\\r\\n        <div id=\\\"nav-blog\\\" class=\\\"sidebar-item\\\">\\r\\n            <h3 style=\\\"color: green;\\\">Cantidad de ventas realizadas: {{cant_ventas}}</h3>\\r\\n        </div>\\r\\n        <div id=\\\"nav-blog\\\" class=\\\"sidebar-item\\\">\\r\\n            <h3 style=\\\"color: green;\\\">Dinero ganado en ventas realizadas: $ {{total_ventas}}</h3>\\r\\n        </div>\\r\\n        <div id=\\\"nav-blog\\\" class=\\\"sidebar-item\\\">\\r\\n            <h3 style=\\\"color: red;\\\">Cantidad de inversiones realizadas: {{cant_inversiones}}</h3>\\r\\n        </div>\\r\\n        <div id=\\\"nav-blog\\\" class=\\\"sidebar-item\\\">\\r\\n            <h3 style=\\\"color: red;\\\">Dinero gastado en inversiones realizadas: $ {{total_inversion}}</h3>\\r\\n        </div>\\r\\n        <div id=\\\"nav-blog\\\" class=\\\"sidebar-item\\\">\\r\\n            <h3 style=\\\"color: #3f51b5;\\\">Total de ganancias: $ {{ganancias}}</h3>\\r\\n        </div>\\r\\n        <!-- <form>\\r\\n            <div class=\\\"col-md-8 text-right\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\">Ver Detalles</button>\\r\\n            </div>\\r\\n        </form> -->\\r\\n    </aside>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './services/usuario.service';\r\nimport { Usuario } from './models/usuario';\r\n\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [UserService]\r\n})\r\nexport class AppComponent implements OnInit{\r\n  public titulo = 'Almacen Veronica Godoy Coltters'; \r\n  public usuario: Usuario;\r\n  public usuario_registro: Usuario;\r\n  public identity;\r\n  public token;\r\n  public errorMessage;\r\n  public alertRegister;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n  .pipe(\r\n    map(result => result.matches),\r\n    shareReplay()\r\n  );\r\n\r\n  constructor(\r\n    private _userService:UserService,\r\n    private breakpointObserver: BreakpointObserver\r\n  ){\r\n    this.usuario = new Usuario('','','','','','');\r\n    this.usuario_registro = new Usuario('','','','','','');\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n\r\n    console.log(this.identity);\r\n    console.log(this.token);\r\n  }\r\n\r\n  public onSubmit(){\r\n    console.log(this.usuario);\r\n\r\n    //Conseguir los datos del usuario identificado\r\n    this._userService.signup(this.usuario).subscribe(\r\n      response => {\r\n        let identity = response.user;\r\n        this.identity = identity;\r\n\r\n        if(!this.identity._id){\r\n            alert(\"El usuario no esta correctamente identificado\");\r\n        }else{           \r\n          //crear elemento en el localstorage para tener al usuario en sesion\r\n            localStorage.setItem('identity', JSON.stringify(identity));\r\n\r\n          //Conseguir el token para enviarselo a cada peticion http\r\n          this._userService.signup(this.usuario, 'true').subscribe(\r\n            response => {\r\n              let token = response.token;\r\n              this.token = token;\r\n      \r\n              if(this.token.lenght <= 0){\r\n                  alert(\"El token no se ha generado correctamente\");\r\n              }else{           \r\n                //crear elemento en el localstorage para tener token disponible\r\n                localStorage.setItem('token', token);\r\n                this.usuario = new Usuario('','','','','','');\r\n              }\r\n            },\r\n            error => {\r\n              var errorMessage = <any>error;\r\n      \r\n              if(errorMessage != null){\r\n                this.errorMessage = error.error.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        var errorMessage = <any>error;\r\n\r\n        if(errorMessage != null){\r\n          this.errorMessage = error.error.message;\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('identity');\r\n    localStorage.removeItem('token');\r\n    localStorage.clear();\r\n    this.identity = null;\r\n    this.token = null;\r\n    //this._router.navigate(['/']);\r\n  }\r\n\r\n  onSubmitRegister(){\r\n    console.log(this.usuario_registro);\r\n\r\n    this._userService.register(this.usuario_registro).subscribe(\r\n      response => {\r\n        let user = response.user;\r\n        this.usuario_registro = user; \r\n\r\n        if(!user._id){\r\n          this.alertRegister = 'Error al registrarse';\r\n        }else{\r\n          this.alertRegister = 'El registro se ha realizado correctamente, identificate con tu Rut: '+this.usuario_registro.rut;\r\n          this.usuario_registro = new Usuario('','','','','',''); \r\n        }\r\n\r\n      },\r\n      error => {\r\n        var errorMessage = <any>error;\r\n\r\n        if(errorMessage != null){\r\n          this.alertRegister = error.error.message;\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport class FormFieldPrefixSuffixExample {\r\n  hide = true;\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { routing, appRoutingProviders } from './app.routing';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\nregisterLocaleData(localeEs);\r\n\r\n//Angular Material\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n//Componentes Globales\r\nimport { InicioComponent } from './components/inicio/inicio.component';\r\nimport { BuscarComponent } from './components/buscar/buscar.component';\r\n\r\n//Componentes de Usuario\r\nimport { EditarUsuarioComponent } from './components/editar-usuario/editar-usuario.component';\r\n\r\n//Componentes de Productos\r\nimport { ListaProductosComponent } from './components/lista-productos/lista-productos.component';\r\nimport { CrearProductoComponent } from './components/crear-producto/crear-producto.component';\r\nimport { EditarProductoComponent } from './components/editar-producto/editar-producto.component';\r\n\r\n//Componentes de Ventas\r\nimport { ListaVentasComponent } from './components/lista-ventas/lista-ventas.component';\r\nimport { CrearVentaComponent } from './components/crear-venta/crear-venta.component';\r\nimport { DatosVentaComponent } from './components/datos-venta/datos-venta.component';\r\nimport { EditarVentaComponent } from './components/editar-venta/editar-venta.component';\r\n\r\nimport { BuscarProductosComponent } from './components/buscar-productos/buscar-productos.component';\r\nimport { BuscarVentasComponent } from './components/buscar-ventas/buscar-ventas.component';\r\nimport { BuscarReportesComponent } from './components/buscar-reportes/buscar-reportes.component';\r\nimport { InversionComponent } from './components/inversion/inversion.component';\r\nimport { ReportesComponent } from './components/reportes/reportes.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { CrearInversionComponent } from './components/crear-inversion/crear-inversion.component';\r\nimport { EditarInversionComponent } from './components/editar-inversion/editar-inversion.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EditarUsuarioComponent,\r\n    InicioComponent,\r\n    ListaProductosComponent,\r\n    CrearProductoComponent,\r\n    ListaVentasComponent,\r\n    CrearVentaComponent,\r\n    EditarProductoComponent,\r\n    DatosVentaComponent,\r\n    EditarVentaComponent,\r\n    BuscarComponent,\r\n    BuscarProductosComponent,\r\n    BuscarVentasComponent,\r\n    BuscarReportesComponent,\r\n    InversionComponent,\r\n    ReportesComponent,\r\n    LoadingComponent,\r\n    CrearInversionComponent,\r\n    EditarInversionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    routing,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    LayoutModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSortModule\r\n  ],\r\n\r\n  providers: [appRoutingProviders, { provide: LOCALE_ID, useValue: 'es' }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//Import Globales\r\nimport { InicioComponent } from './components/inicio/inicio.component';\r\nimport { BuscarComponent } from './components/buscar/buscar.component';\r\nimport { BuscarProductosComponent } from './components/buscar-productos/buscar-productos.component';\r\nimport { BuscarVentasComponent } from './components/buscar-ventas/buscar-ventas.component';\r\nimport { BuscarReportesComponent } from './components/buscar-reportes/buscar-reportes.component';\r\n\r\n//Import Usuario\r\n\r\nimport { EditarUsuarioComponent } from './components/editar-usuario/editar-usuario.component';\r\n\r\n//import Producto\r\nimport { ListaProductosComponent } from './components/lista-productos/lista-productos.component';\r\nimport { CrearProductoComponent } from './components/crear-producto/crear-producto.component';\r\nimport { EditarProductoComponent } from './components/editar-producto/editar-producto.component';\r\n\r\n//import Venta\r\nimport { ListaVentasComponent } from './components/lista-ventas/lista-ventas.component';\r\nimport { CrearVentaComponent } from './components/crear-venta/crear-venta.component';\r\nimport { EditarVentaComponent } from './components/editar-venta/editar-venta.component';\r\n\r\n//import Reportes\r\nimport { ReportesComponent } from './components/reportes/reportes.component';\r\n\r\n//import Inversion\r\nimport { InversionComponent } from './components/inversion/inversion.component';\r\nimport { CrearInversionComponent } from './components/crear-inversion/crear-inversion.component';\r\nimport { EditarInversionComponent } from './components/editar-inversion/editar-inversion.component';\r\n\r\nconst appRoutes: Routes = [\r\n\r\n    {path: '', component: InicioComponent},\r\n    {path: 'inicio', component: InicioComponent},\r\n    {path: 'productos', component: ListaProductosComponent},\r\n    {path: 'crear-producto', component: CrearProductoComponent},\r\n    {path: 'editar-producto/:id', component: EditarProductoComponent},\r\n    {path: 'mis-datos', component: EditarUsuarioComponent},\r\n    {path: 'ventas', component: ListaVentasComponent},\r\n    {path: 'crear-venta', component: CrearVentaComponent},\r\n    {path: 'editar-venta/:id', component: EditarVentaComponent},\r\n    {path: 'buscar', component: BuscarComponent},\r\n    {path: 'buscar-productos', component: BuscarProductosComponent},\r\n    {path: 'buscar-ventas', component: BuscarVentasComponent},\r\n    {path: 'buscar-reportes', component: BuscarReportesComponent},\r\n    {path: 'inversion', component: InversionComponent},\r\n    {path: 'reportes', component: ReportesComponent},\r\n    {path: 'crear-inversion', component: CrearInversionComponent},\r\n    {path: 'editar-inversion/:id', component: EditarInversionComponent},\r\n    {path: '**', component: InicioComponent},\r\n    \r\n];\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, {useHash: true} );\r\n ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVzY2FyLXByb2R1Y3Rvcy9idXNjYXItcHJvZHVjdG9zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { Producto } from '../../models/producto';\r\n\r\nexport interface Transaction {\r\n  nombre: string;\r\n  precio_compra: number; \r\n  precio_venta: number;\r\n  stock: number; \r\n  image: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-buscar-productos',\r\n  templateUrl: './buscar-productos.component.html',\r\n  styleUrls: ['./buscar-productos.component.css'],\r\n  providers: [UserService, ProductService]\r\n})\r\nexport class BuscarProductosComponent implements OnInit {\r\n\r\n  public titulo: string;\r\n  public productos: Producto[];\r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public id_nro: number[] = [];\r\n\r\n  public transactions: Transaction[]; \r\n  displayedColumns: string[] = [ 'nro', 'nombre', 'precio_compra', 'precio_venta', 'stock', 'image'];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _productService: ProductService\r\n  ) {\r\n    this.titulo = \"Buscar Productos\";\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n   }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de productos cargado!');\r\n    //Conseguir el listado de productos\r\n    this.getProductos();  \r\n  }\r\n\r\n  getProductos(){  \r\n    this._route.params.forEach((params: Params) => {\r\n\r\n        this._productService.getAllProductos(this.token).subscribe( \r\n            response => {\r\n\r\n              if(!response.productos){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.productos = response.productos;\r\n                this.transactions = this.productos;\r\n                this.dataSource = new MatTableDataSource(this.transactions);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n                this.paginator._intl.itemsPerPageLabel = 'Productos por pagina';\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVzY2FyLXJlcG9ydGVzL2J1c2Nhci1yZXBvcnRlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-buscar-reportes',\r\n  templateUrl: './buscar-reportes.component.html',\r\n  styleUrls: ['./buscar-reportes.component.css']\r\n})\r\nexport class BuscarReportesComponent implements OnInit {\r\n  public titulo: string;\r\n\r\n  constructor() {\r\n    this.titulo = \"Buscar Reportes\";\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVzY2FyLXZlbnRhcy9idXNjYXItdmVudGFzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { Venta } from '../../models/venta';\r\n\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nexport interface Transaction {\r\n  fecha: Date;\r\n  estado: string;\r\n  nombre_fiador: string;\r\n  cant_productos: number;\r\n  precio_total: number;\r\n  productos: any[]; \r\n}\r\n\r\n@Component({\r\n  selector: 'app-buscar-ventas',\r\n  templateUrl: './buscar-ventas.component.html',\r\n  styleUrls: ['./buscar-ventas.component.css'],\r\n  providers:[UserService, VentaService]\r\n})\r\nexport class BuscarVentasComponent implements OnInit {\r\n  public titulo: string;\r\n  public ventas: Venta[]; \r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public transactions: Transaction[]; \r\n  displayedColumns: string[] = ['fecha', 'estado', 'precio_total', 'opciones'];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute, \r\n    private _router: Router, \r\n    private _userService: UserService, \r\n    private _ventaService: VentaService\r\n  ) {\r\n    this.titulo = \"Buscar Ventas\";\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n   }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de ventas cargado!');\r\n    this.getVentas();\r\n  }\r\n\r\n  getVentas(){  \r\n    this._route.params.forEach((params: Params) => { \r\n\r\n        this._ventaService.getVentas(this.token).subscribe( \r\n            response => {\r\n\r\n              if(!response.ventas){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.ventas = response.ventas; \r\n                this.transactions = this.ventas;\r\n                this.dataSource = new MatTableDataSource(this.transactions);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n                this.paginator._intl.itemsPerPageLabel = 'Ventas por pagina';\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                //this.alertMessage = error.error.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();  \r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVzY2FyL2J1c2Nhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-buscar',\r\n  templateUrl: './buscar.component.html',\r\n  styleUrls: ['./buscar.component.css']\r\n})\r\nexport class BuscarComponent implements OnInit {\r\n  public titulo: string;\r\n\r\n  constructor(){\r\n    this.titulo = \"Buscar\";\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXItaW52ZXJzaW9uL2NyZWFyLWludmVyc2lvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/usuario.service';\nimport { InversionService } from '../../services/inversion.service'\nimport { Inversion } from '../../models/inversion'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-crear-inversion',\n  templateUrl: './crear-inversion.component.html', \n  styleUrls: ['./crear-inversion.component.css'],\n  providers: [UserService, InversionService]\n})\nexport class CrearInversionComponent implements OnInit {\n  public titulo: string;\n  public identity;\n  public token;\n  public errorMessage;\n  public inversion_realizada: Inversion;\n  public alertMessage;\n  loading: boolean = false;\n\n  constructor(\n    private _userService:UserService,\n    private _inversionService: InversionService,\n    private _router: Router,\n    ){\n    this.titulo = \"Inversión\";\n    this.inversion_realizada = new Inversion(new Date(), 0, '');\n   }\n\n  ngOnInit() {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n  }\n\n  onSubmit(){\n    \n    this._inversionService.crearInversion(this.token, this.inversion_realizada).subscribe(\n      response => {\n          if(!response.inversion){\n            this.alertMessage = \"Error en el servidor\";\n          }else{\n            this.ejecutar();\n            \n          }\n\n      },\n      error =>{\n        var errorMessage = <any>error;\n        if(errorMessage != null){\n          console.log(error);\n        }\n      }\n    );\n\n  }\n  \n  ejecutar(){\n    \n    this.loading = true; \n    setTimeout( () => {\n      this.loading = false;\n      this.alertMessage = \"La inversión se ha guardado correctamente\";\n      this.inversion_realizada = new Inversion(new Date(), 0, '');\n      //this._router.navigate(['/inversion']);\n    }, 1000);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXItcHJvZHVjdG8vY3JlYXItcHJvZHVjdG8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { Producto } from '../../models/producto';\r\n\r\n@Component({\r\n  selector: 'app-crear-producto',\r\n  templateUrl: './crear-producto.component.html',\r\n  styleUrls: ['./crear-producto.component.css'],\r\n  providers:[UserService, ProductService]\r\n})\r\nexport class CrearProductoComponent implements OnInit {\r\n  public titulo: string;\r\n  public producto: Producto;\r\n  public identity;\r\n  public token;\r\n  public url:string; \r\n  public alertMessage;\r\n\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _productService: ProductService\r\n  ){\r\n    this.titulo = 'Añadir Producto';\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.producto = new Producto('', 0, 0, 0, '');\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de crear-productos cargado!');\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.producto);\r\n    this._productService.crearProducto(this.token, this.producto).subscribe(\r\n      response => {\r\n\r\n          if(!response.producto){\r\n            this.alertMessage = \"Error en el servidor\";\r\n          }else{\r\n            this.alertMessage = \"El producto se ha creado correctamente\";\r\n            this.producto = response.producto;\r\n            this._router.navigate(['/editar-producto', response.producto._id]);\r\n          }\r\n\r\n      },\r\n      error =>{\r\n        var errorMessage = <any>error;\r\n        if(errorMessage != null){\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXItdmVudGEvY3JlYXItdmVudGEuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { Producto } from '../../models/producto';\r\nimport { Venta } from '../../models/venta';\r\n\r\nexport interface Transaction {\r\n  nombre: string;\r\n  precio_compra: number; \r\n  precio_venta: number;\r\n  stock: number;\r\n  image: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-crear-venta',\r\n  templateUrl: './crear-venta.component.html',\r\n  styleUrls: ['./crear-venta.component.css'],\r\n  providers:[UserService, VentaService, ProductService]\r\n})\r\n\r\nexport class CrearVentaComponent implements OnInit { \r\n    public titulo: string;\r\n    public venta: Venta;\r\n    public productos: Producto[];\r\n    public producto_venta: object[];\r\n    public foros: any[] = []; //Arreglo de productos con sus respectivos datos\r\n    public prods: any[] = []; //Productos en la venta(no ocupando ahora)\r\n    public identity;\r\n    public token;\r\n    public url:string;\r\n    public alertMessage;\r\n    public nro: number; //cambia su valor cada ves que agrega productos\r\n    public total_productos: number; //Guarda el total precio de los productos\r\n    public total_precio: number; //Guarda el total precio de los productos\r\n\r\n    public id_productos: any[] = []; //Guarda el id de productos\r\n    public prodCantidad: any [] = []; //Guarda la cantidad de productos por producto\r\n    public prodPrecio: any[] = []; //Guarda el precio de los productos por producto\r\n    \r\n    public cantidad_ing : Number [] = [1];\r\n\r\n    public transactions: Transaction[]; \r\n    displayedColumns: string[] = ['image', 'nombre', 'precio_venta', 'stock', 'cantidad','opciones']; \r\n    dataSource: MatTableDataSource<Transaction>;\r\n    @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n    @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n  \r\n  constructor(\r\n      private _route: ActivatedRoute, \r\n      private _router: Router, \r\n      private _userService: UserService, \r\n      private _ventaService: VentaService,\r\n      private _productService: ProductService\r\n    ){ \r\n      this.titulo = 'Añadir Venta';\r\n      this.identity = this._userService.getIdentity();\r\n      this.token = this._userService.getToken();\r\n      this.url = GLOBAL.url;\r\n      this.nro = 0;\r\n      this.total_productos = 0;\r\n      this.total_precio = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de crear-productos cargado!');\r\n    this.getProductos();\r\n  }\r\n\r\n  getProductos(){  \r\n    this._route.params.forEach((params: Params) => {\r\n\r\n        this._productService.getAllProductos(this.token).subscribe( \r\n            response => {\r\n\r\n              if(!response.productos){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.productos = response.productos;\r\n                this.transactions = this.productos;\r\n                this.dataSource = new MatTableDataSource(this.transactions);\r\n                for(let i=0; i<this.productos.length; i++){\r\n                  this.cantidad_ing[i]=1;\r\n                }\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n                this.paginator._intl.itemsPerPageLabel = 'Productos por pagina';\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                //this.alertMessage = error.error.message;\r\n                console.log(error); \r\n              }\r\n            }\r\n        );\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();  \r\n  }\r\n\r\n  public pasarid;\r\n  public pasarnombre;\r\n  public pasarprecio;\r\n  public pasarcantidad;\r\n  public producto_igual;\r\n  public cantidad_vendida;\r\n\r\n  anadirProducto(id, nombre, precio, cantidad, cant_vendidad){\r\n\r\n    this.pasarid = id; \r\n    this.pasarnombre = nombre;\r\n    this.pasarprecio = precio;\r\n    this.pasarcantidad = cantidad;\r\n    this.cantidad_vendida = cant_vendidad; \r\n    this.nro++;\r\n    let precio_total = precio;\r\n\r\n    if(this.nro == 1){\r\n      this.foros.push({id, nombre, precio, cantidad, cant_vendidad, precio_total});\r\n      // this.prods.push({id, nombre, cant_vendidad, precio_total});\r\n      this.id_productos.push(id);\r\n      this.prodCantidad.push(cant_vendidad);\r\n      this.prodPrecio.push(precio_total);\r\n      this.TotalProductos();\r\n      this.Total_Precio(precio); \r\n    }\r\n    else {\r\n      for(let j = 0; j < this.foros.length; j++){\r\n        if(this.pasarid == this.foros[j][\"id\"]) {\r\n          this.foros[j][\"cant_vendidad\"] = this.foros[j][\"cant_vendidad\"] + cant_vendidad;\r\n          this.foros[j][\"precio_total\"] = this.foros[j][\"cant_vendidad\"] * precio;\r\n          this.prodCantidad[j] = this.prodCantidad[j] + cant_vendidad;\r\n          this.prodPrecio[j] = this.prodPrecio[j] + precio_total;\r\n          this.TotalProductos();\r\n          this.Total_Precio(precio);\r\n          this.nro=0;\r\n        }\r\n      }\r\n\r\n      if(this.nro == 0){\r\n        this.nro++;\r\n      }else{\r\n        this.foros.push({id, nombre, precio, cantidad, cant_vendidad, precio_total});\r\n        this.id_productos.push(id);\r\n        this.prodCantidad.push(cant_vendidad);\r\n        this.prodPrecio.push(precio_total);\r\n        this.TotalProductos();\r\n        this.Total_Precio(precio);\r\n        this.nro++;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  TotalProductos(){\r\n    this.total_productos = this.total_productos + (this.cantidad_vendida*1);\r\n  }\r\n\r\n  Total_Precio(precio){\r\n    if(this.total_precio!= null){\r\n      this.total_precio = this.total_precio + precio*this.cantidad_vendida;\r\n    }\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGF0b3MtdmVudGEvZGF0b3MtdmVudGEuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { Producto } from '../../models/producto';\r\nimport { Venta } from '../../models/venta';\r\n\r\n@Component({\r\n  selector: 'app-datos-venta',\r\n  templateUrl: './datos-venta.component.html',\r\n  styleUrls: ['./datos-venta.component.css'],\r\n  providers: [UserService, ProductService, VentaService]\r\n})\r\nexport class DatosVentaComponent implements  OnChanges, OnInit{  \r\n  selected = 'Vendido';\r\n \r\n  @Input() id_producto: string;\r\n  @Input() nombre_producto: string;\r\n  @Input() precio_producto: number; \r\n  @Input() cant_producto: number;\r\n  @Input() cant_vendida: number;\r\n\r\n  @Input() nro_producto: number;\r\n  @Input() array: any[] = [];  \r\n  @Input() total_productos: number;\r\n  @Input() total_precio: number;\r\n  @Input() id_prods: any[] = [];\r\n  @Input() cant_prods: any[] = [];\r\n  @Input() precios_prods: any[] = [];\r\n\r\n  public producto: Producto;\r\n  public venta: Venta;\r\n  public identity;\r\n  public token;\r\n  public url: string;\r\n  public alertMessage;\r\n  public fecha_: Date;\r\n  public lista_venta: any;\r\n  \r\n  constructor( \r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _productService: ProductService,\r\n    private _ventaService: VentaService\r\n  ) { \r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.fecha_ = new Date();\r\n  }\r\n\r\n  ngOnChanges(){ \r\n    this.venta = new Venta(this.fecha_, this.selected, '', this.total_productos, this.total_precio, this.id_prods, this.cant_prods, this.precios_prods);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"Componente hijo datos-venta cargado\"); \r\n  }\r\n\r\n  refresh(): void {\r\n    this.venta = new Venta(this.fecha_, '', '', 0, 0, [], [], []);\r\n    window.location.reload();\r\n  }\r\n\r\n  //Eliminar fila del arreglo de productos\r\n  eliminarFila(index){\r\n      console.log(index);\r\n      this._router.navigate(['/crear-venta']);\r\n  }\r\n\r\n  //Guardando la Venta\r\n  onSubmit(){\r\n    if(this.venta.cant_productos == 0){\r\n      this.alertMessage = \"No se han ingresado productos!\";\r\n      return 0;\r\n    }\r\n    this._ventaService.addVentas(this.token, this.venta).subscribe(\r\n      response => {\r\n        if(!response.venta){\r\n          this.alertMessage = \"Error en el servidor\";\r\n        }else{\r\n          this.alertMessage = \"La Venta se ha realizado correctamente\";\r\n          this.venta = response.venta;\r\n          console.log(this.venta); \r\n          for(let i=0; i<this.venta.productos.length; i++){\r\n           this._productService.getProducto(this.token, this.venta.productos[i]).subscribe( response => {\r\n             const productos_venta: any = response;\r\n             const cantidad: number = this.venta.prodCantidad[i];\r\n             productos_venta.producto.stock = productos_venta.producto.stock - cantidad;\r\n             this._productService.editarProducto(this.token, this.venta.productos[i], productos_venta.producto).subscribe ( response => {\r\n               console.log(response)\r\n             })\r\n             \r\n           })\r\n          }\r\n          this._router.navigate(['/ventas']);\r\n        }\r\n      },\r\n      error =>{\r\n        var errorMessage = <any>error; \r\n        if(errorMessage != null){\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdGFyLWludmVyc2lvbi9lZGl0YXItaW52ZXJzaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { GLOBAL } from '../../services/global';\nimport { UserService } from '../../services/usuario.service';\nimport { InversionService } from '../../services/inversion.service';\nimport { Inversion } from '../../models/inversion';\n\n@Component({\n  selector: 'app-editar-inversion',\n  templateUrl: '../../components/crear-inversion/crear-inversion.component.html',\n  styleUrls: ['./editar-inversion.component.css'],\n  providers:[UserService, InversionService]\n})\nexport class EditarInversionComponent implements OnInit {\n  public titulo: string;\n  public inversion_realizada: Inversion;\n  public identity;\n  public token;\n  public url:string;\n  public alertMessage;\n  public is_edit;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService,\n    private _inversionService: InversionService\n  ){\n    this.titulo = 'Editar Inversion';\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n    this.url = GLOBAL.url;\n    this.inversion_realizada = new Inversion(new Date(), 0, '');\n    this.is_edit = true;\n   }\n\n  ngOnInit() { \n    this.getInversion();\n  }\n\n  getInversion(){\n    this._route.params.forEach((params: Params) => {\n        let id = params['id'];\n\n        this._inversionService.getInversion(this.token, id).subscribe(\n            response => {\n                if(!response.inversion){\n                  this._router.navigate(['/']);\n                }else{\n                  this.inversion_realizada = response.inversion;\n                }\n            },\n            error =>{\n              var errorMessage = <any>error;\n              if(errorMessage != null){\n                //this.alertMessage = error.error.message;\n                console.log(error);\n              }\n            }\n        );\n\n    });\n  }\n\n  onSubmit(){\n    this._route.params.forEach((params: Params) => {\n      let id = params['id'];\n\n      this._inversionService.editarInversion(this.token, id, this.inversion_realizada).subscribe(\n        response => {\n            this.inversion_realizada = response.inversion;\n\n            if(!response.inversion){\n              this.alertMessage = \"Error en el servidor\";\n            }else{\n              this.alertMessage = \"La inversion se ha actualizado correctamente\";\n              console.log(\"inversion actualizada\");\n              this._router.navigate(['/inversion']);\n            }\n\n        },\n        error =>{\n          var errorMessage = <any>error;\n          if(errorMessage != null){\n            this.alertMessage = error.error.message;\n\n            console.log(error);\n          }\n        }\n      );\n    });\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdGFyLXByb2R1Y3RvL2VkaXRhci1wcm9kdWN0by5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { UploadService } from '../../services/upload.service';\r\nimport { Producto } from '../../models/producto';\r\n\r\n@Component({\r\n  selector: 'app-editar-producto',\r\n  templateUrl: '../crear-producto/crear-producto.component.html',\r\n  styleUrls: ['./editar-producto.component.css'],\r\n  providers:[UserService, ProductService, UploadService]\r\n})\r\n\r\nexport class EditarProductoComponent implements OnInit {\r\n  public titulo: string;\r\n  public producto: Producto;\r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public alertMessage;\r\n  public is_edit;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _productService: ProductService,\r\n    private _uploadService: UploadService\r\n  ){\r\n    this.titulo = 'Editar Producto';\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.producto = new Producto('', 0, 0, 0, '');\r\n    this.is_edit = true;\r\n   }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de editar-productos cargado!');\r\n    //llamar  metodo del api para sacar un producto en base a su id getproducto\r\n    this.getProducto();\r\n  }\r\n\r\n  getProducto(){\r\n    this._route.params.forEach((params: Params) => {\r\n        let id = params['id'];\r\n\r\n        this._productService.getProducto(this.token, id).subscribe(\r\n            response => {\r\n                if(!response.producto){\r\n                  this._router.navigate(['/']);\r\n                }else{\r\n                  this.producto = response.producto;\r\n                }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                //this.alertMessage = error.error.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.producto);\r\n    this._route.params.forEach((params: Params) => {\r\n      let id = params['id'];\r\n\r\n      this._productService.editarProducto(this.token, id, this.producto).subscribe(\r\n        response => {\r\n            this.producto = response.producto;\r\n\r\n            if(!response.producto){\r\n              this.alertMessage = \"Error en el servidor\";\r\n            }else{\r\n              this.alertMessage = \"El producto se ha actualizado correctamente\";\r\n              if(!this.filesToUpload){\r\n                  this._router.navigate(['/productos']);\r\n              }else{\r\n                  //Subir la imagen del artista\r\n                  this._uploadService.makeFileRequest(this.url+'upload-image-producto/'+id, [], this.filesToUpload, this.token, 'image')\r\n                  .then(\r\n                      (result) => {\r\n                          this._router.navigate(['/productos']);\r\n                      },\r\n                      (error) =>{\r\n                          console.log(error);\r\n                      }\r\n                  );\r\n              \r\n              }\r\n\r\n            }\r\n\r\n        },\r\n        error =>{\r\n          var errorMessage = <any>error;\r\n          if(errorMessage != null){\r\n            this.alertMessage = error.error.message;\r\n\r\n            console.log(error);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n  fileChangeEvent(fileInput: any){\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdGFyLXVzdWFyaW8vZWRpdGFyLXVzdWFyaW8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { Usuario } from '../../models/usuario'; \r\n\r\n@Component({\r\n  selector: 'app-editar-usuario',\r\n  templateUrl: './editar-usuario.component.html',\r\n  styleUrls: ['./editar-usuario.component.css']\r\n})\r\nexport class EditarUsuarioComponent implements OnInit {\r\n  public titulo: string;\r\n  public usuario: Usuario;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private _userService: UserService\r\n  ){ \r\n    this.titulo = \"Actualizar mis datos\"; \r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.usuario = this.identity;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente editar-usuario cargado');\r\n  }\r\n\r\n  onSubmit(){\r\n    this._userService.updateUser(this.usuario).subscribe(\r\n      response => {\r\n          if(!response.user){\r\n              this.alertMessage = 'El usuario no se ha actualizado';\r\n          }else{\r\n              this.ejecutar();\r\n              localStorage.setItem('identity', JSON.stringify(this.usuario));\r\n              document.getElementById(\"identity_name\").innerHTML = this.usuario.nombre + ' ' + this.usuario.apellido;\r\n          }\r\n      },\r\n      error => { \r\n        var errorMessage = <any>error;\r\n\r\n        if(errorMessage != null){\r\n          var body = JSON.parse(error._body);\r\n          this.alertMessage = error.error.message;\r\n          console.log(error);\r\n        }\r\n      }\r\n  );\r\n}\r\n\r\n  ejecutar(){\r\n      \r\n    this.loading = true; \r\n    setTimeout( () => {\r\n      this.loading = false;\r\n      this.alertMessage = 'Datos actualizados correctamente';\r\n    }, 1000);\r\n\r\n  }\r\n  \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdGFyLXZlbnRhL2VkaXRhci12ZW50YS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { Venta } from 'src/app/models/venta';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { Producto } from 'src/app/models/producto';\r\n\r\n\r\n@Component({\r\n  selector: 'app-editar-venta',\r\n  templateUrl: './editar-venta.component.html',\r\n  styleUrls: ['./editar-venta.component.css'],\r\n  providers: [UserService, VentaService, ProductService]\r\n})\r\nexport class EditarVentaComponent implements OnInit {\r\n\r\n  public titulo: string;\r\n  public venta: Venta;\r\n  public productos: Producto[];//array\r\n  public producto: string[] = [];\r\n  public identity;\r\n  public token;\r\n  public url:string; \r\n  public alertMessage;\r\n  public is_edit;\r\n  public selected;\r\n  public fecha_: Date;\r\n  public id_productos:string[] = [];\r\n  public prodCantidad:number[] = [];\r\n  public prodPrecio: number[] = []; \r\n  carriers: any;\r\n  \r\n\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _ventaService: VentaService,\r\n    private _productService: ProductService\r\n  ){\r\n    this.titulo = 'Detalle de Venta';\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.is_edit = true;\r\n    this.venta = new Venta(new Date(), '', '', 0, 0, [], [], []); \r\n   }\r\n\r\n  ngOnInit() { \r\n    console.log('Componente de editar-productos cargado!');\r\n    this.getVenta();\r\n    \r\n  }\r\n\r\n  getVenta(){\r\n    this._route.params.forEach((params: Params) => {\r\n        let id = params['id'];\r\n\r\n        this._ventaService.getVenta(this.token, id).subscribe(\r\n            response => {\r\n              if(!response.venta){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.venta = response.venta;\r\n                this.selected = this.venta.estado;\r\n                this.fecha_ = this.venta.fecha;\r\n                this.id_productos = this.venta.productos;\r\n                this.prodCantidad = this.venta.prodCantidad;\r\n                this.prodPrecio = this.venta.prodPrecio;\r\n                console.log(this.prodCantidad);\r\n                this.getProductos();\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n\r\n    });\r\n  }\r\n\r\n\r\n  getProductos(){\r\n\r\n        for(let i=0 ; i<this.id_productos.length ; i++){\r\n          let id = this.id_productos[i];\r\n          this._productService.getProducto(this.token, id).subscribe(\r\n            response => {\r\n                if(!response.producto){\r\n                  this._router.navigate(['/']); \r\n                }else{\r\n                  this.producto[i] = response.producto.nombre;\r\n                }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                console.log(error);\r\n              }\r\n            }\r\n          );\r\n        }\r\n  }\r\n\r\n}\r\n","module.exports = \".home {\\r\\n    padding-top: 56px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbmljaW8vaW5pY2lvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2luaWNpby9pbmljaW8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob21lIHtcclxuICAgIHBhZGRpbmctdG9wOiA1NnB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { Usuario } from '../../models/usuario';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css'],\r\n  providers:[UserService]\r\n})\r\nexport class InicioComponent implements OnInit {\r\n  public titulo: string;\r\n  public usuario: Usuario;\r\n  public identity;\r\n  public token;\r\n\r\n  constructor(\r\n    private _userService:UserService\r\n  ){\r\n    this.titulo = \"Inicio\"; \r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.usuario = this.identity;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW52ZXJzaW9uL2ludmVyc2lvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { InversionService } from '../../services/inversion.service';\r\nimport { Inversion } from '../../models/inversion';\r\n\r\nexport interface Transaction {\r\n  fecha: Date;\r\n  inversion: number; \r\n  comentarios: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inversion',\r\n  templateUrl: './inversion.component.html',\r\n  styleUrls: ['./inversion.component.css'],\r\n  providers:[UserService, InversionService]\r\n})\r\nexport class InversionComponent implements OnInit {\r\n\r\n  public titulo: string;\r\n  public inversiones: Inversion[];\r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public transactions: Transaction[]; \r\n  loading: boolean;\r\n  public comentario: boolean;\r\n  displayedColumns: string[] = ['fecha', 'inversion', 'comentarios','opciones'];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _inversionService: InversionService\r\n  ){\r\n    this.titulo = \"Inversión\";\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.loading = true;\r\n    this.comentario = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Componente de inversiones cargado!');\r\n    this.getInversiones();  \r\n  }\r\n\r\n  getInversiones(){\r\n    this._route.params.forEach((params: Params) => {\r\n\r\n      this._inversionService.getInversiones(this.token).subscribe( \r\n          response => {\r\n\r\n            if(!response.inversiones){\r\n              this._router.navigate(['/']);\r\n            }else{\r\n              this.inversiones = response.inversiones;\r\n              this.transactions = this.inversiones;\r\n              this.dataSource = new MatTableDataSource(this.transactions);\r\n              this.dataSource.sort = this.sort;\r\n              this.dataSource.paginator = this.paginator;\r\n              this.paginator._intl.itemsPerPageLabel = 'Inversiones por pagina';\r\n              this.loading = false;\r\n            }\r\n          },\r\n          error =>{\r\n            var errorMessage = <any>error; \r\n            if(errorMessage != null){\r\n              //this.alertMessage = error.error.message;\r\n              console.log(error);\r\n            }\r\n          }\r\n      );\r\n  });\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n     \r\n  }\r\n\r\n  public confirmado;\r\n  onDeleteConfirm(id){ \r\n    this.confirmado = id;\r\n  }\r\n\r\n  onCancelInversion(){\r\n    this.confirmado = null;\r\n  }\r\n\r\n  onDeleteInversion(id){\r\n    this._inversionService.eliminarInversion(this.token, id).subscribe(\r\n        response => {\r\n            if(!response.inversion){\r\n              alert('Error en el servidor');\r\n            }else{\r\n              this.getInversiones();\r\n            }\r\n        },\r\n        error =>{\r\n          var errorMessage = <any>error;\r\n          if(errorMessage != null){\r\n            console.log(error);\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  mostrarComentario(){\r\n    this.comentario = true;\r\n  }\r\n\r\n} \r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdGEtcHJvZHVjdG9zL2xpc3RhLXByb2R1Y3Rvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { ProductService } from '../../services/producto.service';\r\nimport { Producto } from '../../models/producto';\r\n\r\nexport interface Transaction {\r\n  nombre: string;\r\n  precio_compra: number; \r\n  precio_venta: number;\r\n  stock: number;\r\n  image: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-lista-productos',\r\n  templateUrl: './lista-productos.component.html',\r\n  styleUrls: ['./lista-productos.component.css'],\r\n  providers:[UserService, ProductService]\r\n})\r\n\r\nexport class ListaProductosComponent implements OnInit {\r\n\r\n    public titulo: string;\r\n    public productos: Producto[];\r\n    public identity;\r\n    public token;\r\n    public url:string;\r\n    public transactions: Transaction[]; \r\n    loading: boolean;\r\n    displayedColumns: string[] = ['nombre', 'precio_compra', 'precio_venta', 'stock', 'image', 'opciones'];\r\n    dataSource: MatTableDataSource<Transaction>;\r\n    @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n    @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n      private _route: ActivatedRoute,\r\n      private _router: Router,\r\n      private _userService: UserService,\r\n      private _productService: ProductService\r\n  ){\r\n      this.titulo = 'Productos';\r\n      this.identity = this._userService.getIdentity();\r\n      this.token = this._userService.getToken();\r\n      this.url = GLOBAL.url;\r\n      this.loading = true;\r\n   }\r\n\r\n   ngOnInit() {\r\n    console.log('Componente de productos cargado!');\r\n    //Conseguir el listado de productos\r\n    this.getProductos();  \r\n\r\n  }\r\n\r\n  //Metodo para obtener productos de la BD\r\n   getProductos(){  \r\n    this._route.params.forEach((params: Params) => {\r\n\r\n        this._productService.getAllProductos(this.token).subscribe( \r\n            response => {\r\n\r\n              if(!response.productos){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.productos = response.productos;\r\n                this.transactions = this.productos;\r\n                this.dataSource = new MatTableDataSource(this.transactions);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n                this.paginator._intl.itemsPerPageLabel = 'Productos por pagina';\r\n                this.loading = false;\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                //this.alertMessage = error.error.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n     \r\n  }\r\n\r\n  public confirmado;\r\n  onDeleteConfirm(id){ \r\n    this.confirmado = id;\r\n  }\r\n\r\n  onCancelProducto(){\r\n    this.confirmado = null;\r\n  }\r\n\r\n  onDeleteProducto(id){\r\n    this._productService.eliminarProducto(this.token, id).subscribe(\r\n        response => {\r\n            if(!response.producto){\r\n              //console.log(response);\r\n              alert('Error en el servidor');\r\n            }else{\r\n              this.getProductos();\r\n            }\r\n        },\r\n        error =>{\r\n          var errorMessage = <any>error;\r\n          if(errorMessage != null){\r\n            //this.alertMessage = error.error.message;\r\n            console.log(error);\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdGEtdmVudGFzL2xpc3RhLXZlbnRhcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { Venta } from '../../models/venta';\r\n\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nexport interface Transaction {\r\n  fecha: Date;\r\n  estado: string;\r\n  nombre_fiador: string;\r\n  cant_productos: number;\r\n  precio_total: number;\r\n  productos: any[]; \r\n}\r\n\r\n@Component({\r\n  selector: 'app-lista-ventas',\r\n  templateUrl: './lista-ventas.component.html',\r\n  styleUrls: ['./lista-ventas.component.css'],\r\n  providers:[UserService, VentaService]\r\n})\r\nexport class ListaVentasComponent implements OnInit { \r\n\r\n  public titulo: string;\r\n  public ventas: Venta[]; \r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public transactions: Transaction[]; \r\n  displayedColumns: string[] = ['fecha', 'estado', 'precio_total', 'opciones'];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatSort, {static:false}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static:false}) paginator: MatPaginator;\r\n\r\n  loading: boolean;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute, \r\n    private _router: Router, \r\n    private _userService: UserService, \r\n    private _ventaService: VentaService\r\n    ){ \r\n    this.titulo = 'Ventas';\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.loading = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    console.log('Componente de ventas cargado!');\r\n    this.getVentas();\r\n  }\r\n\r\n  getVentas(){  \r\n    this._route.params.forEach((params: Params) => { \r\n\r\n        this._ventaService.getVentas(this.token).subscribe( \r\n            response => {\r\n\r\n              if(!response.ventas){\r\n                this._router.navigate(['/']);\r\n              }else{\r\n                this.ventas = response.ventas; \r\n                this.transactions = this.ventas;\r\n                this.dataSource = new MatTableDataSource(this.transactions);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n                this.paginator._intl.itemsPerPageLabel = 'Ventas por pagina';\r\n                this.loading = false;\r\n              }\r\n            },\r\n            error =>{\r\n              var errorMessage = <any>error;\r\n              if(errorMessage != null){\r\n                //this.alertMessage = error.error.message;\r\n                console.log(error);\r\n              }\r\n            }\r\n        );\r\n    });\r\n  }\r\n\r\n  public confirmado;\r\n  onDeleteConfirm(id){\r\n    this.confirmado = id;\r\n  }\r\n\r\n  onCancelVenta(){\r\n    this.confirmado = null;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();  \r\n  }\r\n\r\n  onDeleteVenta(id){\r\n    this._ventaService.deleteVenta(this.token, id).subscribe(\r\n        response => {\r\n            if(!response.venta){\r\n              alert('Error en el servidor');\r\n            }else{\r\n              this.getVentas();\r\n            }\r\n        },\r\n        error =>{\r\n          var errorMessage = <any>error;\r\n          if(errorMessage != null){\r\n            console.log(error);\r\n          }\r\n        }\r\n    );\r\n  }  \r\n\r\n}\r\n","module.exports = \"/* You can add global styles to this file, and also import other style files */\\r\\n\\r\\nbody {\\r\\n    background-color: black;\\r\\n    color: white !important;\\r\\n}\\r\\n\\r\\nhr {\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.puntero {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n    border-radius: 100%;\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n.card-title,\\r\\n.card-text {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.btn-outline-success {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.img-thumb {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n/* Animaciones */\\r\\n\\r\\n.animated {\\r\\n    -webkit-animation-duration: 1s;\\r\\n    animation-duration: 1s;\\r\\n    -webkit-animation-fill-mode: both;\\r\\n    animation-fill-mode: both;\\r\\n}\\r\\n\\r\\n.fast {\\r\\n    -webkit-animation-duration: 0.4s;\\r\\n    animation-duration: 0.4s;\\r\\n    -webkit-animation-fill-mode: both;\\r\\n    animation-fill-mode: both;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fadeIn {\\r\\n    from {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    to {\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes fadeIn {\\r\\n    from {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    to {\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.fadeIn {\\r\\n    -webkit-animation-name: fadeIn;\\r\\n            animation-name: fadeIn;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2FkaW5nL2xvYWRpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4RUFBOEU7O0FBRTlFO0lBQ0ksdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjs7QUFFQTs7SUFFSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBR0EsZ0JBQWdCOztBQUVoQjtJQUNJLDhCQUE4QjtJQUM5QixzQkFBc0I7SUFDdEIsaUNBQWlDO0lBQ2pDLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyx3QkFBd0I7SUFDeEIsaUNBQWlDO0lBQ2pDLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJO1FBQ0ksVUFBVTtJQUNkO0lBQ0E7UUFDSSxVQUFVO0lBQ2Q7QUFDSjs7QUFQQTtJQUNJO1FBQ0ksVUFBVTtJQUNkO0lBQ0E7UUFDSSxVQUFVO0lBQ2Q7QUFDSjs7QUFFQTtJQUNJLDhCQUFzQjtZQUF0QixzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvYWRpbmcvbG9hZGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogWW91IGNhbiBhZGQgZ2xvYmFsIHN0eWxlcyB0byB0aGlzIGZpbGUsIGFuZCBhbHNvIGltcG9ydCBvdGhlciBzdHlsZSBmaWxlcyAqL1xyXG5cclxuYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5ociB7XHJcbiAgICBib3JkZXItY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ucHVudGVybyB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5pbWctY2lyY2xlIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi5jYXJkLXRpdGxlLFxyXG4uY2FyZC10ZXh0IHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmJhZGdlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuXHJcbi5idG4tb3V0bGluZS1zdWNjZXNzIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuXHJcbi5pbWctdGh1bWIge1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcblxyXG4vKiBBbmltYWNpb25lcyAqL1xyXG5cclxuLmFuaW1hdGVkIHtcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xyXG59XHJcblxyXG4uZmFzdCB7XHJcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC40cztcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC40cztcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcclxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZmFkZUluIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbiAgICB0byB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxufVxyXG5cclxuLmZhZGVJbiB7XHJcbiAgICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVwb3J0ZXMvcmVwb3J0ZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UserService } from '../../services/usuario.service';\r\nimport { InversionService } from '../../services/inversion.service';\r\nimport { VentaService } from '../../services/venta.service';\r\nimport { Venta } from '../../models/venta';\r\nimport { Inversion } from '../../models/inversion';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reportes',\r\n  templateUrl: './reportes.component.html',\r\n  styleUrls: ['./reportes.component.css'],\r\n  providers: [UserService, InversionService, VentaService]\r\n})\r\nexport class ReportesComponent implements OnInit {\r\n\r\n  public titulo: string; \r\n  public ventas: Venta[];\r\n  public inversion: Inversion[];\r\n  public identity;\r\n  public token;\r\n  public url:string;\r\n  public mostrar:boolean;\r\n  public fecha_inicio = new Date().toISOString();\r\n  public fecha_termino = new Date().toISOString();\r\n  public total_inversion: number;\r\n  public total_ventas: number;\r\n  public cant_ventas: number;\r\n  public cant_inversiones: number;\r\n  public ganancias: number;\r\n  loading: boolean;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute, \r\n    private _router: Router, \r\n    private _userService: UserService, \r\n    private _ventaService: VentaService,\r\n    private _inversionService: InversionService\r\n    ) {\r\n    this.titulo = 'Reportes';\r\n    this.identity = this._userService.getIdentity();\r\n    this.token = this._userService.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.mostrar = false;\r\n    this.total_inversion = 0;\r\n    this.total_ventas = 0;\r\n    this.cant_inversiones = 0;\r\n    this.cant_ventas = 0;\r\n    this.ganancias = 0;\r\n    this.loading = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  consultar(){\r\n\r\n    this.borrarValores();\r\n    this.ejecutar();\r\n    //obteniendo total de inversion\r\n    this._inversionService.obtenerInverionesFecha(this.token, this.fecha_inicio, this.fecha_termino).subscribe(\r\n      response => {\r\n        this.inversion = response.inversiones;\r\n        for(let i=0; i< this.inversion.length; i++){\r\n          this.total_inversion = this.total_inversion + this.inversion[i].inversion\r\n        }\r\n        this.cant_inversiones = this.inversion.length;\r\n      },\r\n      error =>{\r\n        var errorMessage = <any>error;\r\n        if(errorMessage != null){\r\n          console.log(error);\r\n        }\r\n      });\r\n    \r\n      this._ventaService.obtenerVentasFecha(this.token, this.fecha_inicio, this.fecha_termino).subscribe(\r\n        response => {\r\n          this.ventas = response.ventas;\r\n          console.log(this.ventas);\r\n          for(let i=0; i< this.ventas.length; i++){\r\n            this.total_ventas = this.total_ventas + this.ventas[i].precio_total;\r\n          }\r\n          this.cant_ventas = this.ventas.length;\r\n          this.ganancias = this.total_ventas - this.total_inversion;\r\n        },\r\n        error =>{\r\n          var errorMessage = <any>error;\r\n          if(errorMessage != null){\r\n            console.log(error);\r\n          }\r\n        });\r\n        \r\n  }\r\n\r\n  ejecutar(){\r\n      this.loading = true;\r\n      setTimeout( () => {\r\n      this.loading = false;\r\n      this.mostrar = true;\r\n    }, 1500);\r\n  }\r\n\r\n  borrarValores(){\r\n    this.total_inversion = 0;\r\n    this.total_ventas = 0;\r\n    this.cant_inversiones = 0;\r\n    this.cant_ventas = 0;\r\n    this.ganancias = 0;\r\n  }\r\n\r\n}\r\n","export class Inversion{\r\n    constructor(\r\n        public fecha: Date,\r\n        public inversion: number,\r\n        public comentarios: string\r\n    ){} \r\n}","export class Producto{\r\n    constructor(\r\n        public nombre: string,\r\n        public precio_compra: number,\r\n        public precio_venta: number,\r\n        public stock: number,\r\n        public image: string\r\n    ){} \r\n}","export class Usuario{\r\n    constructor(\r\n        public _id: string,\r\n        public nombre: string,\r\n        public apellido: string,\r\n        public email: string,\r\n        public rut: string,\r\n        public password: string\r\n    ){}\r\n}","export class Venta{\r\n    constructor(\r\n        public fecha: Date,\r\n        public estado: string,\r\n        public nombre_fiador: string,\r\n        public cant_productos: number,\r\n        public precio_total: number,\r\n        public productos: string[],\r\n        public prodCantidad: number[],\r\n        public prodPrecio: number[] \r\n    ){}\r\n}","export var GLOBAL = {\r\n    url: 'https://veronica-godoy.herokuapp.com/api/',\r\n    ip: '0.0.0.0/0'\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\nimport { Inversion } from '../models/inversion';\r\n\r\n@Injectable()\r\nexport class InversionService{\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    //Metodo para obtener todas las inversiones realizadas\r\n    getInversiones(token):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.get(this.url+'inversiones-almacenadas', {headers:headers});  \r\n    }\r\n\r\n    //Metodo para obtener una inversion especifica\r\n    getInversion(token, id:string):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.get(this.url+'inversion/'+id, {headers:headers}); \r\n        \r\n    } \r\n\r\n    //Metodo para actualizar una Inversion\r\n    editarInversion(token, id:string, inversion: Inversion):Observable<any>{\r\n        let params = JSON.stringify(inversion);\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url+'inversion/'+id, params, { headers: headers });\r\n    }\r\n\r\n    //Crear una inversion\r\n    crearInversion(token, inversion: Inversion):Observable<any>{\r\n        let params = JSON.stringify(inversion);\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n      });\r\n\r\n        return this._http.post(this.url+'inversion', params, { headers: headers });\r\n    }\r\n\r\n    //Obtener inversiones por fecha\r\n    obtenerInverionesFecha(token, fecha_ini: string, fecha_ter: string):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.get(this.url+'inversion/'+fecha_ini+'/'+fecha_ter, {headers:headers});  \r\n    }\r\n\r\n    //Eliminar una inversion\r\n    eliminarInversion(token, id:string):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.delete(this.url+'inversion/'+id, {headers:headers}); \r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\nimport { Producto } from '../models/producto';\r\n\r\n@Injectable()\r\nexport class ProductService{\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    //Metodo para obtener todos los productos de la BD \r\n    getAllProductos(token):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.get(this.url+'productos-almacenados', {headers:headers});  \r\n    }\r\n\r\n    //Metodo para obtener un producto de la BD\r\n    getProducto(token, id:string):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.get(this.url+'producto/'+id, {headers:headers}); \r\n        \r\n    } \r\n\r\n    //Metodo para añadir un nuevo producto a la BD\r\n    crearProducto(token, producto: Producto):Observable<any>{\r\n        let params = JSON.stringify(producto);\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n      });\r\n\r\n        return this._http.post(this.url+'producto', params, { headers: headers });\r\n    }\r\n\r\n    //Metodo para editar un artista en la BD\r\n    editarProducto(token, id:string, producto: Producto):Observable<any>{\r\n        let params = JSON.stringify(producto);\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url+'producto/'+id, params, { headers: headers });\r\n    }\r\n\r\n    //Metodo para eliminar un producto especifico de la BD\r\n    eliminarProducto(token, id:string):Observable<any>{\r\n\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': token\r\n        });\r\n        \r\n        return this._http.delete(this.url+'producto/'+id, {headers:headers}); \r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\nimport { Producto } from '../models/producto';\r\n\r\n@Injectable()\r\nexport class UploadService{\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    //realiza la peticion AJAX y la subida al servidor de la imagen\r\n    makeFileRequest(url: string, params: Array<string>, files:Array<File>, token: string, name: string){\r\n\r\n        return new Promise(function(resolve, reject){\r\n            var formData: any = new FormData();\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            for(var i =0; i<files.length; i++){\r\n                formData.append(name, files[i], files[i].name);\r\n            }\r\n\r\n            xhr.onreadystatechange = function(){\r\n            if(xhr.readyState == 4){\r\n                if(xhr.status == 200){\r\n                resolve(JSON.parse(xhr.response));\r\n                }else{\r\n                reject(xhr.response);\r\n                }\r\n            }\r\n            }\r\n\r\n            xhr.open('POST', url, true);\r\n            xhr.setRequestHeader('Authorization', token);\r\n            xhr.send(formData);\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class UserService{\r\n    public identity;\r\n    public token;\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    signup(user_to_login, gethash = null):Observable<any>{\r\n        if(gethash != null){\r\n            user_to_login.gethash = gethash;\r\n        }\r\n        let json = JSON.stringify(user_to_login);\r\n        let params = json;\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n        return this._http.post(this.url+'login', params, { headers: headers });                                    \r\n    }\r\n\r\n    register(user_to_register):Observable<any>{\r\n        let params = JSON.stringify(user_to_register);\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n        return this._http.post(this.url+'registro', params, { headers: headers });\r\n        \r\n    }\r\n\r\n    updateUser(user_to_update):Observable<any>{\r\n        let params = JSON.stringify(user_to_update);\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                        'Authorization': this.getToken()\r\n                                      });\r\n\r\n        return this._http.put(this.url+'actualizar-usuario/'+user_to_update._id, params, { headers: headers });\r\n        \r\n    }\r\n\r\n    getIdentity(){\r\n        let identity = JSON.parse(localStorage.getItem('identity'));\r\n\r\n        if(identity != \"undefined\"){\r\n            this.identity = identity;\r\n        }else{\r\n            this.identity = null;\r\n        }\r\n\r\n        return this.identity;\r\n    }\r\n\r\n    getToken(){\r\n        let token = localStorage.getItem('token');\r\n\r\n        if(token != \"undefined\"){\r\n            this.token = token;\r\n        }else{\r\n            this.token = null;\r\n        }\r\n\r\n        return this.token;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\nimport { Venta } from '../models/venta';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VentaService {\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    //Crear Venta\r\n    addVentas(token, venta: Venta): Observable<any>{\r\n    let params = JSON.stringify(venta);\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n      return this._http.post(this.url+'venta', params, {headers: headers});\r\n    } \r\n\r\n    //Mostrar una Venta\r\n    getVenta(token, id:string):Observable<any>{\r\n\r\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                      'Authorization': token\r\n      });\r\n      return this._http.get(this.url+'venta/'+id, {headers:headers}); \r\n    }\r\n\r\n    //Mostrar Ventas\r\n    getVentas(token): Observable<any>{\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      });\r\n      return this._http.get(this.url+'ventas', {headers:headers});   \r\n    }\r\n\r\n    //Metodo para editar una venta en la BD\r\n    editarVenta(token, id:string, venta: Venta):Observable<any>{\r\n      let params = JSON.stringify(venta);\r\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                      'Authorization': token\r\n      });\r\n\r\n      return this._http.put(this.url+'venta/'+id, params, { headers: headers });\r\n    }\r\n\r\n    //Eliminar Venta\r\n    deleteVenta(token, id:string):Observable<any>{\r\n      \r\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                      'Authorization': token\r\n      });\r\n      return this._http.delete(this.url+'venta/'+id, {headers:headers}); \r\n    }\r\n\r\n    obtenerVentasFecha(token, fecha_ini: string, fecha_ter: string):Observable<any>{\r\n\r\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json',\r\n                                      'Authorization': token\r\n      });\r\n      \r\n      return this._http.get(this.url+'venta/'+fecha_ini+'/'+fecha_ter, {headers:headers});  \r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}